{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "090bef23-a5f0-4572-bde1-5caf26d2d989",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "OV",
            "style": "link"
          },
          {
            "id": "0ebe4816-7c32-4b20-9a77-ca683db97eb5",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "link"
          },
          {
            "id": "d983c7c7-b5a0-4245-86fa-52ac1266fb13",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Azure Advisor",
            "subTarget": "Advisor",
            "style": "link"
          },
          {
            "id": "88c013ec-1149-411f-8b35-02e737237a91",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Azure Site Recovery",
            "subTarget": "Backup",
            "style": "link"
          },
          {
            "id": "9b8f2619-143e-47eb-a821-aadcf29c095d",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Compute",
            "subTarget": "Compute",
            "style": "link"
          },
          {
            "id": "ea4f305b-6689-4706-9627-8b4de5a8c098",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Containers",
            "subTarget": "Containers",
            "style": "link"
          },
          {
            "id": "9a24ddec-d921-4956-bdfd-b43f8a4a1dae",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Databases",
            "subTarget": "Databases",
            "style": "link"
          },
          {
            "id": "647b5890-5962-42e9-acdd-6a6392ce74c1",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Integration",
            "subTarget": "Integration",
            "style": "link"
          },
          {
            "id": "346cd3cc-65ff-49dd-ae87-fc907b52dc37",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Networking",
            "subTarget": "Networking",
            "style": "link"
          },
          {
            "id": "946b8b66-9891-4017-b5dd-f6527f28cee4",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Storage",
            "subTarget": "Storage",
            "style": "link"
          },
          {
            "id": "8e297f94-65ab-4c53-9513-29204af07f80",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Web",
            "subTarget": "Web",
            "style": "link"
          }
        ]
      },
      "name": "links - 5"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "e4edb4c3-543b-419b-86dc-9539f3279c35",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "description": "Lists all subscriptions.",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "c6b39aae-6fef-4ab7-beee-5b59dfe15c74",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "ec96194d-d118-47b7-aee5-da4ae8d314c5",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "value": "Yes",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "> Azure Advisor analyzes your configurations and usage telemetry and offers personalized, actionable recommendations to help you optimize your Azure resources for reliability, security, operational excellence, performance, and cost.\r\n\r\n* Azure Advisor is available automatically without any configuration.\r\n* The table in this workbook specifically relate to any reliability recommendations that may apply to the selected subscription(s).\r\n* Filter advisor recommendations using the subscriptions parameter as required.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Advisor Help"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project Impact, ImpactedValue, Description, resourceGroup, Category, ImpactedField, LastUpdated\r\n| where Category == \"HighAvailability\"\r\n| where resourceGroup in ({ResourceGroup})",
              "size": 3,
              "title": "Advisor - Reliability",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Impact",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "High",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Medium",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Low",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "LastUpdated",
                    "formatter": 6
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Impact"
                  },
                  {
                    "columnId": "ImpactedValue",
                    "label": "Resource"
                  },
                  {
                    "columnId": "Description"
                  },
                  {
                    "columnId": "resourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "Category"
                  },
                  {
                    "columnId": "ImpactedField",
                    "label": "Resource Type"
                  },
                  {
                    "columnId": "LastUpdated",
                    "label": "Last Updated"
                  }
                ]
              }
            },
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Advisor"
      },
      "name": "Advisor"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Reliability Workbook\r\n\r\nThe objective of this workbook is to provide an overview of the configured state of deployment options that affect the resilience and/or availability SLA for common Azure resource types. The workbook is to be used as guidance only, and does not represent a guarantee for a service level.\r\n\r\n* Building a reliable application in the cloud is different from traditional application development. While historically you may have purchased levels of redundant higher-end hardware to minimize the chance of an entire application platform failing, in the cloud, we acknowledge up front that failures will happen. Instead of trying to prevent failures altogether, the goal is to minimize the effects of a single failing component.\r\n* To assess your workload using the tenets found in the Microsoft Azure Well-Architected Framework, see the [Microsoft Azure Well-Architected Review](https://docs.microsoft.com/en-us/assessments/?id=azure-architecture-review&mode=pre-assessment).\r\n* Reliable applications are:\r\n\t* Resilient and recover gracefully from failures, and they continue to function with minimal downtime and data loss before full recovery.\r\n\t* Highly available (HA) and run as designed in a healthy state with no significant downtime.\r\n* Understanding how these elements work together — and how they affect cost — is essential to building a reliable application. It can help you determine how much downtime is acceptable, the potential cost to your business, and which functions are necessary during a recovery.\r\n* Reliability considerations for individual Azure services are provided in the [Resiliency checklist for specific Azure services](https://docs.microsoft.com/en-us/azure/architecture/checklist/resiliency-per-service).\r\n\r\n> Reference: [Microsoft Azure Well-Architected Framework - Reliability Pillar](https://docs.microsoft.com/en-us/azure/architecture/framework/resiliency/overview)"
            },
            "name": "text - 0"
          },
          {
            "type": 1,
            "content": {
              "json": "This status indicates an implemented feature that can result in a higher SLA, and/or increased ability to restore a service.",
              "style": "success"
            },
            "customWidth": "50",
            "name": "text - 1",
            "styleSettings": {
              "margin": "10px",
              "showBorder": true
            }
          },
          {
            "type": 1,
            "content": {
              "json": "This status indicates a feature that has not been implemented, and therefore can result in a reduced SLA, and/or reduced ability to restore a service.",
              "style": "warning"
            },
            "customWidth": "50",
            "name": "text - 2",
            "styleSettings": {
              "margin": "10px",
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "OV"
      },
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "059f8eeb-be9a-48dd-b4cd-1176d8dc529f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "description": "Lists all subscriptions.",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "ac7e3b53-0894-4426-bc96-4e91af261f53",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "972eba34-11d9-42e3-8005-b0334b3a301b",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "5c4674db-3151-4a5f-bb5a-e5e886cc2c17",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "945162bf-cf6d-4956-952c-606acfd2c5e5",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy - Copy - Copy - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Advisor - Reliability",
              "expandable": true,
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by Description",
                    "size": 3,
                    "title": "By Recommendation",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by ImpactedField\r\n",
                    "size": 3,
                    "title": "By Resource Type",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by ImpactedValue\r\n",
                    "size": 3,
                    "title": "By Resource",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy - Copy - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by Impact\r\n",
                    "size": 3,
                    "title": "By Impact Level",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated, SubscriptionId = subscriptionId\r\n| where Category == \"HighAvailability\" \r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by SubscriptionName",
                    "size": 3,
                    "title": "By Subscription",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "subscription step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by resourceGroup",
                    "size": 3,
                    "title": "By Resource Group",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "resource group step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "advisor group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Compute",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualMachines' and tags.creationSource !contains \"aks\"\r\n| extend cAvailabilityZone = coalesce(tostring(zones[0]), '0')\r\n| extend cAvailabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-')\r\n| extend OSDisk_Type = properties.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend AvailabilityZone = case(cAvailabilityZone == 0, \"Warning\", \r\n    cAvailabilityZone == 1, \"Configured\", \r\n    \"Unknown\")\r\n| extend AvailabilitySet = case(cAvailabilitySet == '-', \"Warning\", \r\n    cAvailabilitySet <> \"-\", \"Configured\", \r\n    \"Unknown\")\r\n| extend OSDisk_UltraorPremium= case(OSDisk_Type startswith \"Standard\", \"Warning\",\r\n    OSDisk_Type startswith \"Ultra\", \"Configured\",\r\n    OSDisk_Type startswith \"Premium\", \"Configured\", \r\n    \"Unknown\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = tolower(tostring(id)), Name = name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, State = tostring(properties.extended.instanceView.powerState.displayStatus), Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment\r\n| join kind = leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualMachines'\r\n    | project ResourceId = tolower(tostring(id))\r\n    | join kind = leftouter (\r\n        securityresources\r\n        | where properties.displayName contains \"Azure Backup should\"\r\n        | extend BackupKnown = case((properties.status.code) == \"Unhealthy\", \"Warning\", \r\n            (properties.status.code) == \"Healthy\", \"Configured\",\r\n            \"Unknown\")\r\n        | project ResourceId = tolower(tostring(properties.resourceDetails.Id)), BackupKnown\r\n        )\r\n        on ResourceId\r\n    | extend Backup = case(BackupKnown == \"Warning\", \"Warning\", \r\n        BackupKnown == \"Configured\", \"Configured\",\r\n        \"Unknown\") \r\n    | project ResourceId, Backup\r\n    )\r\n    on ResourceId\r\n| project ResourceId, Name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, State, Location, ResourceGroup, SubscriptionId, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, State, Location, ResourceGroup, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, SubscriptionId, SubscriptionName, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalVM = count(ResourceId),\r\n    VmDeallocatedStatus = dcountif(Name, State == \"VM deallocated\"), \r\n    WithAvSetCount = dcountif(Name, AvailabilitySet<>\"Warning\"),\r\n\tAvSetCount = dcountif(Name, AvailabilitySet == \"Warning\"), \r\n    WithAvZoneCount = dcountif(Name, AvailabilityZone<>\"Warning\"), \r\n\tAvZoneCount = dcountif(Name, AvailabilityZone == \"Warning\"), \r\n\tOSDiskUnknown = dcountif(Name, OSDisk_UltraorPremium == \"Unknown\"), \r\n    OSDiskPremorUltra = dcountif(Name, OSDisk_UltraorPremium == \"Configured\"), \r\n\tOSDiskStandard = dcountif(Name, OSDisk_UltraorPremium == \"Warning\"), \r\n\tBackUpWarning = dcountif(Name, Backup == \"Warning\")",
                    "size": 4,
                    "title": "Virtual Machines",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VmDeallocatedStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithAvSetCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvSetCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithAvZoneCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvZoneCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskUnknown",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskPremorUltra",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskStandard",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "BackUpWarning",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalVM",
                          "label": "VM Total"
                        },
                        {
                          "columnId": "VmDeallocatedStatus",
                          "label": "Deallocated VMs (No disk info)"
                        },
                        {
                          "columnId": "WithAvSetCount",
                          "label": "VMs in Availability Set"
                        },
                        {
                          "columnId": "AvSetCount",
                          "label": "VMs not in Availability Set"
                        },
                        {
                          "columnId": "WithAvZoneCount",
                          "label": "VMs in Availability Zone"
                        },
                        {
                          "columnId": "AvZoneCount",
                          "label": "VMs not in Availability Zone"
                        },
                        {
                          "columnId": "OSDiskUnknown",
                          "label": "OS Disk Unknown"
                        },
                        {
                          "columnId": "OSDiskPremorUltra",
                          "label": "OS Disk Premium or Ultra"
                        },
                        {
                          "columnId": "OSDiskStandard",
                          "label": "OS Disk Standard"
                        },
                        {
                          "columnId": "BackUpWarning",
                          "label": "Backup Warning"
                        }
                      ]
                    },
                    "tileSettings": {
                      "showBorder": false
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "name": "query - 2",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualMachines' and tags.creationSource !contains \"aks\"\r\n| extend cAvailabilityZone = coalesce(tostring(zones[0]), '0')\r\n| extend cAvailabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-')\r\n| extend OSDisk_Type = properties.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend AvailabilityZone = case(cAvailabilityZone == 0, \"Warning\", \r\n    cAvailabilityZone == 1, \"Configured\", \r\n    \"Unknown\")\r\n| extend AvailabilitySet = case(cAvailabilitySet == '-', \"Warning\", \r\n    cAvailabilitySet <> \"-\", \"Configured\", \r\n    \"Unknown\")\r\n| extend OSDisk_UltraorPremium= case(OSDisk_Type startswith \"Standard\", \"Warning\",\r\n    OSDisk_Type startswith \"Ultra\", \"Configured\",\r\n    OSDisk_Type startswith \"Premium\", \"Configured\", \r\n    \"Unknown\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = tolower(tostring(id)), Name = name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, State = tostring(properties.extended.instanceView.powerState.displayStatus), Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment\r\n| join kind = leftouter (\r\n    resources\r\n    | where type =~ 'microsoft.compute/virtualMachines'\r\n    | project ResourceId = tolower(tostring(id))\r\n    | join kind = leftouter (\r\n        securityresources\r\n        | where properties.displayName contains \"Azure Backup should\"\r\n        | extend BackupKnown = case((properties.status.code) == \"Unhealthy\", \"Warning\", \r\n            (properties.status.code) == \"Healthy\", \"Configured\",\r\n            \"Unknown\")\r\n        | project ResourceId = tolower(tostring(properties.resourceDetails.Id)), BackupKnown\r\n        )\r\n        on ResourceId\r\n    | extend Backup = case(BackupKnown == \"Warning\", \"Warning\", \r\n        BackupKnown == \"Configured\", \"Configured\",\r\n        \"Unknown\") \r\n    | project ResourceId, Backup\r\n    )\r\n    on ResourceId\r\n| project ResourceId, Name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, State, Location, ResourceGroup, SubscriptionId, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, State, Location, ResourceGroup, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, SubscriptionId, SubscriptionName, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize VmScore =\r\ntostring((\r\n//  TotalVM = count(ResourceId),\r\n//  VmDeallocatedStatus = dcountif(Name, State == \"VM deallocated\"), \r\n    dcountif(Name, AvailabilitySet<>\"Warning\") * 1 + // WithAvSetCount\r\n//\tAvSetCount = dcountif(Name, AvailabilitySet == \"Warning\"), \r\n    dcountif(Name, AvailabilityZone<>\"Warning\") * 1 + //WithAvZoneCount\r\n//\tAvZoneCount = dcountif(Name, AvailabilityZone == \"Warning\"), \r\n//\tOSDiskUnknown = dcountif(Name, OSDisk_UltraorPremium == \"Unknown\"), \r\n//   OSDiskPremorUltra = dcountif(Name, OSDisk_UltraorPremium == \"Configured\"), \r\n\tdcountif(Name, OSDisk_UltraorPremium == \"Warning\") * 1 + // OSDiskStandard\r\n\tdcountif(Name, Backup == \"Warning\") * 1 //BackUpWarning\r\n)/4)",
                    "size": 4,
                    "title": "Virtual Machines - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "VmDeallocatedStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithAvSetCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvSetCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithAvZoneCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvZoneCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskUnknown",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskPremorUltra",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDiskStandard",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "BackUpWarning",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "VmScore",
                        "formatter": 1
                      },
                      "showBorder": false,
                      "sortOrderField": 1,
                      "size": "auto"
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "name": "query - 2 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.compute/virtualmachinescalesets\"\r\n| where tags.orchestrator !contains \"Kubernetes\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend Capacity = sku.capacity\r\n| extend cCapacity = case(sku.capacity > 1, \"Configured\", \"Warning\")\r\n| extend FaultDomainCount = properties.platformFaultDomainCount\r\n| extend cFaultDomainCount = case(properties.platformFaultDomainCount >= 2, \"Configured\", \"Warning\")\r\n| extend ManagedDiskType = properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend singlePlacementGroup = properties.singlePlacementGroup\r\n| extend overprovision = case(properties.overprovision == 1, \"Enabled\", \"Not Enabled\")\r\n| extend ZonesCount = array_length(parse_json(zones))\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision = overprovision, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalVMSS = count(ResourceId),\r\n    WithCapacity = dcountif(Name, cCapacity <> \"Warning\"), \r\n\tCapacity = dcountif(Name, cCapacity == \"Warning\"), \r\n    WithFaultDomain = dcountif(Name, cFaultDomainCount <> \"Warning\"),\r\n\tFaultDomain = dcountif(Name, cFaultDomainCount == \"Warning\")",
                    "size": 4,
                    "title": "Virtual Machine Scale Sets",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "WithCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithFaultDomain",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FaultDomain",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalVMSS",
                          "label": "VMSS Total"
                        },
                        {
                          "columnId": "WithCapacity",
                          "label": "Two or more VMs in Scale Set "
                        },
                        {
                          "columnId": "Capacity",
                          "label": "Less than two VMs in Scale Set"
                        },
                        {
                          "columnId": "WithFaultDomain",
                          "label": "VMSS with two or more Fault Domains"
                        },
                        {
                          "columnId": "FaultDomain",
                          "label": "VMSS with less than two Fault Domains"
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {},
                      "showBorder": false,
                      "sortCriteriaField": "Capacity",
                      "sortOrderField": 1
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "name": "query - 3",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.compute/virtualmachinescalesets\"\r\n| where tags.orchestrator !contains \"Kubernetes\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend Capacity = sku.capacity\r\n| extend cCapacity = case(sku.capacity > 1, \"Configured\", \"Warning\")\r\n| extend FaultDomainCount = properties.platformFaultDomainCount\r\n| extend cFaultDomainCount = case(properties.platformFaultDomainCount >= 2, \"Configured\", \"Warning\")\r\n| extend ManagedDiskType = properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend singlePlacementGroup = properties.singlePlacementGroup\r\n| extend overprovision = case(properties.overprovision == 1, \"Enabled\", \"Not Enabled\")\r\n| extend ZonesCount = array_length(parse_json(zones))\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision = overprovision, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize VmssScore =\r\ntostring((\r\n // TotalVMSS = count(ResourceId),\r\n    dcountif(Name, cCapacity <> \"Warning\") * 1 + //WithCapacity \r\n//\tCapacity = dcountif(Name, cCapacity == \"Warning\"), \r\n    dcountif(Name, cFaultDomainCount <> \"Warning\") * 1  //WithFaultDomain\r\n//\tFaultDomain = dcountif(Name, cFaultDomainCount == \"Warning\")\r\n)/2)",
                    "size": 4,
                    "title": "Virtual Machine Scale Sets - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "WithCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "WithFaultDomain",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FaultDomain",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "VmssScore"
                      },
                      "showBorder": false,
                      "sortCriteriaField": "Capacity",
                      "sortOrderField": 1
                    },
                    "graphSettings": {
                      "type": 0
                    }
                  },
                  "name": "query - 3 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\n    sku == 'free',\r\n    'Free',\r\n    sku == 'shared',\r\n    'Shared',\r\n    sku == 'dynamic',\r\n    'Dynamic',\r\n    sku == 'isolated',\r\n    'Isolated',\r\n    sku == 'premiumv2',\r\n    'Premium V2',\r\n    sku == 'premium',\r\n    'Premium',\r\n    sku == 'basic',\r\n    'Basic',\r\n    sku == 'elasticpremium',\r\n    'Elastic Premium',\r\n    sku == 'premiumv3',\r\n    'Premium V3',\r\n    'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\n    state == 'stopped',\r\n    'Stopped',\r\n    state == 'running',\r\n    'Running',\r\n    'Other')\r\n| extend appType = case(\r\n    kind contains 'botapp',\r\n    'Bot Service',\r\n    kind contains 'api',\r\n    'Api App',\r\n    kind contains 'functionapp' and kind !contains 'workflowapp',\r\n    'Function App',\r\n    kind contains 'functionapp' and kind contains 'workflowapp',\r\n    'Logic App (Preview)',\r\n    'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, Status = status, Tier = pricingTier, AppServicePlanId = appServicePlanId, AppType = appType, ResourceId = id, Type = type, Kind = kind, Location = location, SubscriptionId = subscriptionId, ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Function App\"\r\n| summarize \r\n    TotalFA = count(ResourceId),\r\n    TierWithSLA = dcountif(Name, Tier !in (\"Shared\", \"Free\")),\r\n    Tier = dcountif(Name, Tier in (\"Shared\", \"Free\"))",
                    "size": 4,
                    "title": "App Service - Function App",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "TierWithSLA",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalFA",
                          "label": "Function App Total"
                        },
                        {
                          "columnId": "TierWithSLA",
                          "label": "Tier with SLA"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Tier without SLA (Free | Shared)"
                        }
                      ]
                    }
                  },
                  "name": "query - 4",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\n    sku == 'free',\r\n    'Free',\r\n    sku == 'shared',\r\n    'Shared',\r\n    sku == 'dynamic',\r\n    'Dynamic',\r\n    sku == 'isolated',\r\n    'Isolated',\r\n    sku == 'premiumv2',\r\n    'Premium V2',\r\n    sku == 'premium',\r\n    'Premium',\r\n    sku == 'basic',\r\n    'Basic',\r\n    sku == 'elasticpremium',\r\n    'Elastic Premium',\r\n    sku == 'premiumv3',\r\n    'Premium V3',\r\n    'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\n    state == 'stopped',\r\n    'Stopped',\r\n    state == 'running',\r\n    'Running',\r\n    'Other')\r\n| extend appType = case(\r\n    kind contains 'botapp',\r\n    'Bot Service',\r\n    kind contains 'api',\r\n    'Api App',\r\n    kind contains 'functionapp' and kind !contains 'workflowapp',\r\n    'Function App',\r\n    kind contains 'functionapp' and kind contains 'workflowapp',\r\n    'Logic App (Preview)',\r\n    'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, Status = status, Tier = pricingTier, AppServicePlanId = appServicePlanId, AppType = appType, ResourceId = id, Type = type, Kind = kind, Location = location, SubscriptionId = subscriptionId, ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Function App\"\r\n| summarize AsfaScore =\r\ntostring((\r\n//    TotalFA = count(ResourceId),\r\n    dcountif(Name, Tier !in (\"Shared\", \"Free\")) * 1 // TierWithSLA\r\n //   Tier = dcountif(Name, Tier in (\"Shared\", \"Free\"))\r\n)/1)",
                    "size": 4,
                    "title": "App Service - Function App - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "TierWithSLA",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "AsfaScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "query - 4 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "compute group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Containers",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| extend LoadBalancerSku = properties.networkProfile.loadBalancerSku\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, LoadBalancerSku, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, LoadBalancerSku, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n\tTotalAKSManagedClusters = count(ResourceId),\r\n    OtherLoadBalancerSku = dcountif(Name, LoadBalancerSku <> \"Basic\"),\r\n    BasicLoadBalancerSku = dcountif(Name, LoadBalancerSku == \"Basic\")",
                    "size": 4,
                    "title": "Azure Kubernetes Service",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OtherLoadBalancerSku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "BasicLoadBalancerSku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalAKSManagedClusters",
                          "label": "AKS Managed Clusters Total"
                        },
                        {
                          "columnId": "OtherLoadBalancerSku",
                          "label": "Load Balancer SKU with SLA"
                        },
                        {
                          "columnId": "BasicLoadBalancerSku",
                          "label": "Load Balancer SKU without SLA (Basic)"
                        }
                      ]
                    }
                  },
                  "name": "containers step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| extend LoadBalancerSku = properties.networkProfile.loadBalancerSku\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, LoadBalancerSku, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, LoadBalancerSku, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize AksScore =\r\ntostring((\r\n//\tTotalAKSManagedClusters = count(ResourceId),\r\n    dcountif(Name, LoadBalancerSku <> \"Basic\") * 1 // OtherLoadBalancerSku\r\n//  BasicLoadBalancerSku = dcountif(Name, LoadBalancerSku == \"Basic\")\r\n)/1)",
                    "size": 4,
                    "title": "Azure Kubernetes Service - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OtherLoadBalancerSku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "BasicLoadBalancerSku",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "AksScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "containers step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "containers group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Databases",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier <> \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB / 1000 / 1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize\r\n \tTotalAzureSQLDBs = count(ResourceId),\r\n    HigherSLATier = dcountif(ResourceId, Tier in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")),\r\n    Tier = dcountif(ResourceId, Tier !in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")), \r\n    GRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"GRS\"),\r\n    StorageAccountType = dcountif(ResourceId, StorageAccountType != \"GRS\"), \r\n    LRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"LRS\"),\r\n    OkReadReplicaCount = dcountif(ResourceId, ReadReplicaCount >= 1), \r\n    ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    OkZoneRedundant = dcountif(ResourceId, ZoneRedundant == true),\r\n    ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)",
                    "size": 4,
                    "title": "Azure SQL Databases",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "HigherSLATier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "1",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalAzureSQLDBs",
                          "label": "Azure SQL Database Total"
                        },
                        {
                          "columnId": "HigherSLATier",
                          "label": "Tier with higher SLA (Premium, BusinessCritical, DataWarehouse)"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Tier with lower SLA"
                        },
                        {
                          "columnId": "GRSStorageAccountType",
                          "label": "GRS Storage"
                        },
                        {
                          "columnId": "StorageAccountType",
                          "label": "Not GRS Storage"
                        },
                        {
                          "columnId": "LRSStorageAccountType",
                          "label": "LRS Storage"
                        },
                        {
                          "columnId": "OkReadReplicaCount",
                          "label": "At least one Read Replica"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "No Read Replica"
                        },
                        {
                          "columnId": "OkZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Not Zone Redundant"
                        }
                      ]
                    }
                  },
                  "name": "azure sql step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier <> \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB / 1000 / 1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize SqlDbScore = \r\ntostring((\r\n// \tTotalAzureSQLDBs = count(ResourceId),\r\n    dcountif(ResourceId, Tier in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")) * 1 + // HigherSLATier\r\n//  Tier = dcountif(ResourceId, Tier !in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")), \r\n    dcountif(ResourceId, StorageAccountType == \"GRS\") * 1 + // GRSStorageAccountType\r\n//  StorageAccountType = dcountif(ResourceId, StorageAccountType != \"GRS\"), \r\n//  LRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"LRS\"),\r\n    dcountif(ResourceId, ReadReplicaCount >= 1) * 1 + // OkReadReplicaCount\r\n//  ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    dcountif(ResourceId, ZoneRedundant == true) * 1 // OkZoneRedundant\r\n//  ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)\r\n)/4)",
                    "size": 4,
                    "title": "Azure SQL Databases - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "HigherSLATier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "1",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SqlDbScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "azure sql step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier == \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB / 1000 / 1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalSynapseDBs = count(ResourceId),\r\n    HigherSLATier = dcountif(ResourceId, Tier in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")),\r\n    Tier = dcountif(ResourceId, Tier !in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")), \r\n    GRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"GRS\"),\r\n    StorageAccountType = dcountif(ResourceId, StorageAccountType != \"GRS\"), \r\n    LRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"LRS\"),\r\n    OkReadReplicaCount = dcountif(ResourceId, ReadReplicaCount >= 1), \r\n    ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    OkZoneRedundant = dcountif(ResourceId, ZoneRedundant == true),\r\n    ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)",
                    "size": 4,
                    "title": "Azure Synapse Analytics",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "HigherSLATier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalSynapseDBs",
                          "label": "Azure Synapse Analytics Database Total"
                        },
                        {
                          "columnId": "HigherSLATier",
                          "label": "Tier with higher SLA (DataWarehouse)"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Tier with lower SLA"
                        },
                        {
                          "columnId": "GRSStorageAccountType",
                          "label": "GRS Storage"
                        },
                        {
                          "columnId": "StorageAccountType",
                          "label": "Not GRS Storage"
                        },
                        {
                          "columnId": "LRSStorageAccountType",
                          "label": "LRS Storage"
                        },
                        {
                          "columnId": "OkReadReplicaCount",
                          "label": "At least one Read Replica"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "No Read Replica"
                        },
                        {
                          "columnId": "OkZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Not Zone Redundant"
                        }
                      ]
                    }
                  },
                  "name": "synapse step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier == \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB / 1000 / 1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize SynapseScore =\r\ntostring((\r\n//  TotalSynapseDBs = count(ResourceId),\r\n    dcountif(ResourceId, Tier in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")) * 1 + // HigherSLATier\r\n//  Tier = dcountif(ResourceId, Tier !in (\"Premium\", \"BusinessCritical\", \"DataWarehouse\")), \r\n    dcountif(ResourceId, StorageAccountType == \"GRS\") * 1 + // GRSStorageAccountType\r\n//  StorageAccountType = dcountif(ResourceId, StorageAccountType != \"GRS\"), \r\n//  LRSStorageAccountType = dcountif(ResourceId, StorageAccountType == \"LRS\"),\r\n    dcountif(ResourceId, ReadReplicaCount >= 1) * 1 + // OkReadReplicaCount\r\n//  ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    dcountif(ResourceId, ZoneRedundant == true) * 1 // OkZoneRedundant\r\n//  ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)\r\n)/4)",
                    "size": 4,
                    "title": "Azure Synapse Analytics - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "HigherSLATier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "LRSStorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "SynapseScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "synapse step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n| extend PublicNetworkAccess = properties.publicNetworkAccess\r\n| extend ZoneRedundant = properties.locations[0].isZoneRedundant\r\n| extend ZoneRedundantRecommend = case(\r\n    (location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\", \"australiaeast\")) and (ZoneRedundant == \"false\"), \"Not Configured\",\r\n    ZoneRedundant == \"true\", \"Configured\",\r\n    \"NA\")\r\n| extend ReadReplicaCount = array_length(parse_json(properties.readLocations))\r\n| extend VnetFilterEnabled = properties.isVirtualNetworkFilterEnabled\r\n| extend DatabaseAccountOfferType = properties.databaseAccountOfferType\r\n| extend AutomaticFailover = case((properties.enableAutomaticFailover == \"false\") \r\n    and (properties.enableMultipleWriteLocations == \"false\") and (ReadReplicaCount > 1), \"Not Configured\", case(properties.enableAutomaticFailover == \"true\", \"Configured\", \"NA\"))\r\n| extend MultipleWriteLocations = case(properties.enableMultipleWriteLocations == \"false\", \"Not Enabled\", case(properties.enableMultipleWriteLocations == \"true\", \"Enabled\", \"Undefined\"))\r\n| extend ConsistencyPolicy = properties.consistencyPolicy.defaultConsistencyLevel\r\n| extend EnabledApi = properties.EnabledApiTypes\r\n| extend Endpoint = properties.documentEndpoint\r\n| extend EnabledFreeTier = properties.enableFreeTier\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, FreeTier = EnabledFreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId\r\n    )\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Location, ResourceGroup, Type, FreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalCosmosDB = count(ResourceId),\r\n    OkReadReplicaCount = dcountif(ResourceId, ReadReplicaCount > 1), \r\n    ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    OkMultipleWriteLocations = dcountif(ResourceId, MultipleWriteLocations == \"Enabled\"), \r\n    MultipleWriteLocations = dcountif(ResourceId, MultipleWriteLocations <> \"Enabled\"), \r\n    OkAutomaticFailover = dcountif(ResourceId, AutomaticFailover == \"Configured\"),\r\n    AutomaticFailover = dcountif(ResourceId, AutomaticFailover == \"Not Configured\"),\r\n    OkZoneRedundant = dcountif(ResourceId, ZoneRedundant == true),\r\n    ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)",
                    "size": 4,
                    "title": "Azure Cosmos DB",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkMultipleWriteLocations",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "MultipleWriteLocations",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkAutomaticFailover",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AutomaticFailover",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalCosmosDB",
                          "label": "Cosmos DB Total"
                        },
                        {
                          "columnId": "OkReadReplicaCount",
                          "label": "At least one Read Replica"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "No Read Replica"
                        },
                        {
                          "columnId": "OkMultipleWriteLocations",
                          "label": "Multiple Write Locations"
                        },
                        {
                          "columnId": "MultipleWriteLocations",
                          "label": "No Multiple Write Locations"
                        },
                        {
                          "columnId": "OkAutomaticFailover",
                          "label": "Automatic Failover"
                        },
                        {
                          "columnId": "AutomaticFailover",
                          "label": "No Automatic Failover"
                        },
                        {
                          "columnId": "OkZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Not Zone Redundant"
                        }
                      ]
                    },
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "Type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "ReadReplicaCount",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "cosmos db step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n| extend PublicNetworkAccess = properties.publicNetworkAccess\r\n| extend ZoneRedundant = properties.locations[0].isZoneRedundant\r\n| extend ZoneRedundantRecommend = case(\r\n    (location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\", \"australiaeast\")) and (ZoneRedundant == \"false\"), \"Not Configured\",\r\n    ZoneRedundant == \"true\", \"Configured\",\r\n    \"NA\")\r\n| extend ReadReplicaCount = array_length(parse_json(properties.readLocations))\r\n| extend VnetFilterEnabled = properties.isVirtualNetworkFilterEnabled\r\n| extend DatabaseAccountOfferType = properties.databaseAccountOfferType\r\n| extend AutomaticFailover = case((properties.enableAutomaticFailover == \"false\") \r\n    and (properties.enableMultipleWriteLocations == \"false\") and (ReadReplicaCount > 1), \"Not Configured\", case(properties.enableAutomaticFailover == \"true\", \"Configured\", \"NA\"))\r\n| extend MultipleWriteLocations = case(properties.enableMultipleWriteLocations == \"false\", \"Not Enabled\", case(properties.enableMultipleWriteLocations == \"true\", \"Enabled\", \"Undefined\"))\r\n| extend ConsistencyPolicy = properties.consistencyPolicy.defaultConsistencyLevel\r\n| extend EnabledApi = properties.EnabledApiTypes\r\n| extend Endpoint = properties.documentEndpoint\r\n| extend EnabledFreeTier = properties.enableFreeTier\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, FreeTier = EnabledFreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId\r\n    )\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Location, ResourceGroup, Type, FreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize CosmosScore = \r\ntostring((\r\n//  TotalCosmosDB = count(ResourceId),\r\n    dcountif(ResourceId, ReadReplicaCount > 1) * 1 + // OkReadReplicaCount\r\n//  ReadReplicaCount = dcountif(ResourceId, ReadReplicaCount < 1), \r\n    dcountif(ResourceId, MultipleWriteLocations == \"Enabled\") * 1 + // OkMultipleWriteLocations\r\n//  MultipleWriteLocations = dcountif(ResourceId, MultipleWriteLocations <> \"Enabled\"), \r\n    dcountif(ResourceId, AutomaticFailover == \"Configured\") * 1 + // OkAutomaticFailover\r\n//  AutomaticFailover = dcountif(ResourceId, AutomaticFailover == \"Not Configured\"),\r\n    dcountif(ResourceId, ZoneRedundant == true) * 1 // OkZoneRedundant\r\n//  ZoneRedundant = dcountif(ResourceId, ZoneRedundant == false)\r\n)/4)",
                    "size": 4,
                    "title": "Azure Cosmos DB - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkMultipleWriteLocations",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "MultipleWriteLocations",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkAutomaticFailover",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AutomaticFailover",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "CosmosScore",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "ReadReplicaCount",
                        "formatter": 5
                      },
                      "showBorder": false
                    }
                  },
                  "name": "cosmos db step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/servers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend sku_family = sku.family\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend backup_georedundant = properties.storageProfile.geoRedundantBackup\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend infrastructureEncryption = properties.infrastructureEncryption\r\n| extend minimalTlsVersion = properties.minimalTlsVersion\r\n| extend userVisibleState = properties.userVisibleState\r\n| extend replicationRole = properties.replicationRole\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, SkuFamily = sku_family, GeoRedundantBackup = backup_georedundant, StorageAutogrow = storage_autogrow, InfrastructureEncryption = infrastructureEncryption, Status = userVisibleState, Endpoint = fullyQualifiedDomainName, TlsEnforcement = minimalTlsVersion, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, ResourceGroup, Type, Tier, SkuName, SkuFamily, GeoRedundantBackup, StorageAutogrow, InfrastructureEncryption, TlsEnforcement, SslEnforcement, ReplicationRole, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalMysqlSingleDB = count(ResourceId),\r\n    OkTier = dcountif(ResourceId, Tier <> \"Basic\"), \r\n    Tier = dcountif(ResourceId, Tier == \"Basic\"), \r\n    OkGeoRedundantBackup = dcountif(ResourceId, GeoRedundantBackup <> \"Disabled\"),\r\n    GeoRedundantBackup = dcountif(ResourceId, GeoRedundantBackup == \"Disabled\"), \r\n    OkStorageAutogrow = dcountif(ResourceId, StorageAutogrow <> \"Disabled\"),\r\n    StorageAutogrow = dcountif(ResourceId, StorageAutogrow == \"Disabled\")",
                    "size": 4,
                    "title": "MySQL Single",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkGeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkStorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuFamily",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "InfrastructureEncryption",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TlsEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ReplicationRole",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalMysqlSingleDB",
                          "label": "MySQL Single Server Total"
                        },
                        {
                          "columnId": "OkTier",
                          "label": "Business Workload Tier or higher"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Basic Tier (best for dev workloads)"
                        },
                        {
                          "columnId": "OkGeoRedundantBackup",
                          "label": "Geo-Redundant Backup"
                        },
                        {
                          "columnId": "GeoRedundantBackup",
                          "label": "Geo-Redundant Backup Disabled"
                        },
                        {
                          "columnId": "OkStorageAutogrow",
                          "label": "Storage Autogrow"
                        },
                        {
                          "columnId": "StorageAutogrow",
                          "label": "Storage Autogrow Disabled"
                        }
                      ]
                    }
                  },
                  "name": "mysql single step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/servers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend sku_family = sku.family\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend backup_georedundant = properties.storageProfile.geoRedundantBackup\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend infrastructureEncryption = properties.infrastructureEncryption\r\n| extend minimalTlsVersion = properties.minimalTlsVersion\r\n| extend userVisibleState = properties.userVisibleState\r\n| extend replicationRole = properties.replicationRole\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, SkuFamily = sku_family, GeoRedundantBackup = backup_georedundant, StorageAutogrow = storage_autogrow, InfrastructureEncryption = infrastructureEncryption, Status = userVisibleState, Endpoint = fullyQualifiedDomainName, TlsEnforcement = minimalTlsVersion, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, ResourceGroup, Type, Tier, SkuName, SkuFamily, GeoRedundantBackup, StorageAutogrow, InfrastructureEncryption, TlsEnforcement, SslEnforcement, ReplicationRole, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize mySqlSingleScore = \r\ntostring((\r\n//  TotalMysqlSingleDB = count(ResourceId),\r\n    dcountif(ResourceId, Tier <> \"Basic\") * 1 + // OkTier\r\n//  Tier = dcountif(ResourceId, Tier == \"Basic\"), \r\n    dcountif(ResourceId, GeoRedundantBackup <> \"Disabled\") * 1 + // OkGeoRedundantBackup\r\n//  GeoRedundantBackup = dcountif(ResourceId, GeoRedundantBackup == \"Disabled\"), \r\n    dcountif(ResourceId, StorageAutogrow <> \"Disabled\") * 1 // OkStorageAutogrow\r\n//  StorageAutogrow = dcountif(ResourceId, StorageAutogrow == \"Disabled\")\r\n)/3)",
                    "size": 4,
                    "title": "MySQL Single - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkGeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkStorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuFamily",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "InfrastructureEncryption",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TlsEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ReplicationRole",
                          "formatter": 5
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "mySqlSingleScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "mysql single step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/flexibleservers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend State = properties.State\r\n| extend replicationRole = properties.replicationRole\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend HaState = properties.haState\r\n| extend HaEnabled = properties.haEnabled\r\n| extend ReplicationConfiguration = case((replicationRole == \"None\" and HaEnabled == \"Disabled\"), \"Not Configured\", case(replicationRole == \"None\", \"NA\", \"Configured\"))\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, StorageAutogrow = storage_autogrow, Endpoint = fullyQualifiedDomainName, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, HaState, HaEnabled, ReplicationConfiguration, Details, Criticality, Environment, backup_retention\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Location, ResourceGroup, Type, Tier, SkuName, BackupRetention = backup_retention, StorageAutogrow, SslEnforcement, ReplicationRole, HaState, HaEnabled, ReplicationConfiguration, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalMysqlFlexible = count(ResourceId),\r\n    OkTier = dcountif(ResourceId, Tier <> \"Basic\"), \r\n    Tier = dcountif(ResourceId, Tier == \"Basic\"), \r\n    OkHaState = dcountif(ResourceId, HaState == \"Healthy\"), \r\n    HaState = dcountif(ResourceId, HaState != \"Healthy\"), \r\n    OkHaEnabled = dcountif(ResourceId, HaEnabled <> \"Disabled\"), \r\n    HaEnabled = dcountif(ResourceId, HaEnabled == \"Disabled\"), \r\n    StorageAutogrow = dcountif(ResourceId, StorageAutogrow == \"Disabled\")",
                    "size": 4,
                    "title": "MySQL Flexible",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkHaState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaEnabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReplicationConfiguration",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalMysqlFlexible",
                          "label": "MySQL Flexible Server Total"
                        },
                        {
                          "columnId": "OkTier",
                          "label": "Business Workload Tier or higher"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Basic Tier (best for dev workloads)"
                        },
                        {
                          "columnId": "OkHaState",
                          "label": "Healthy High Availability State"
                        },
                        {
                          "columnId": "HaState",
                          "label": "High Availability State not Healthy"
                        },
                        {
                          "columnId": "OkHaEnabled",
                          "label": "High Availability Enabled"
                        },
                        {
                          "columnId": "HaEnabled",
                          "label": "High Availability Not Enabled"
                        },
                        {
                          "columnId": "StorageAutogrow",
                          "label": "Storage Autogrow Disabled"
                        }
                      ]
                    }
                  },
                  "name": "mysql flexible",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/flexibleservers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend State = properties.State\r\n| extend replicationRole = properties.replicationRole\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend HaState = properties.haState\r\n| extend HaEnabled = properties.haEnabled\r\n| extend ReplicationConfiguration = case((replicationRole == \"None\" and HaEnabled == \"Disabled\"), \"Not Configured\", case(replicationRole == \"None\", \"NA\", \"Configured\"))\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, StorageAutogrow = storage_autogrow, Endpoint = fullyQualifiedDomainName, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, HaState, HaEnabled, ReplicationConfiguration, Details, Criticality, Environment, backup_retention\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Location, ResourceGroup, Type, Tier, SkuName, BackupRetention = backup_retention, StorageAutogrow, SslEnforcement, ReplicationRole, HaState, HaEnabled, ReplicationConfiguration, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize MySqlFlexibleScore = \r\ntostring((\r\n//  TotalMysqlFlexible = count(ResourceId),\r\n    dcountif(ResourceId, Tier <> \"Basic\") * 1 + // OkTier\r\n//  Tier = dcountif(ResourceId, Tier == \"Basic\"), \r\n    dcountif(ResourceId, HaState == \"Healthy\") * 1 + // OkHaState\r\n//  HaState = dcountif(ResourceId, HaState != \"Healthy\"), \r\n    dcountif(ResourceId, HaEnabled <> \"Disabled\") * 1 + // OkHaEnabled\r\n//  HaEnabled = dcountif(ResourceId, HaEnabled == \"Disabled\"), \r\n    dcountif(ResourceId, StorageAutogrow <> \"Disabled\") * 1 // OkStorageAutogrow\r\n//  StorageAutogrow = dcountif(ResourceId, StorageAutogrow == \"Disabled\")\r\n)/4)",
                    "size": 4,
                    "title": "MySQL Flexible - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkHaState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaEnabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReplicationConfiguration",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "MySqlFlexibleScore"
                      },
                      "showBorder": false,
                      "size": "auto"
                    }
                  },
                  "name": "mysql flexible - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "databases group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Integration",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.apimanagement/service\"\r\n| extend Tier = tostring(sku.name)\r\n| extend Capacity = sku.capacity\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, name, type, location, resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment, Tier, Capacity\r\n//sub name\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name = name, Location = location, ResourceGroup = resourceGroup, Type = type, SubscriptionId, SubscriptionName, Tier, Capacity, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n \tTotalAPI = count(ResourceId),\r\n    OkTier = dcountif(ResourceId, Tier <> \"Developer\"), \r\n    Tier = dcountif(ResourceId, Tier == \"Developer\"), \r\n    OkCapacity = dcountif(ResourceId, Capacity > 1),\r\n    Capacity = dcountif(ResourceId, Capacity <= 1)",
                    "size": 4,
                    "title": "API Management",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalAPI",
                          "label": "API Management Total"
                        },
                        {
                          "columnId": "OkTier",
                          "label": "Business Tier"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Developer Tier"
                        },
                        {
                          "columnId": "OkCapacity",
                          "label": "Multiple Instances"
                        },
                        {
                          "columnId": "Capacity",
                          "label": "Single Instance"
                        }
                      ]
                    }
                  },
                  "name": "api management step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.apimanagement/service\"\r\n| extend Tier = tostring(sku.name)\r\n| extend Capacity = sku.capacity\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, name, type, location, resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment, Tier, Capacity\r\n//sub name\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name = name, Location = location, ResourceGroup = resourceGroup, Type = type, SubscriptionId, SubscriptionName, Tier, Capacity, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize ApimScore = \r\ntostring((\r\n// \tTotalAPI = count(ResourceId),\r\n    dcountif(ResourceId, Tier <> \"Developer\") * 1 + // OkTier \r\n//  Tier = dcountif(ResourceId, Tier == \"Developer\"), \r\n    dcountif(ResourceId, Capacity > 1) * 1  // OkCapacity\r\n//  Capacity = dcountif(ResourceId, Capacity <= 1)\r\n)/2)",
                    "size": 4,
                    "title": "API Management - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "ApimScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "api management step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "integration group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Networking",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, SkuName, Tier, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalFirewalls= count(ResourceId),\r\n    OkZones = dcountif(ResourceId, Zones contains \"[\"),\r\n    Zones = dcountif(ResourceId, Zones !contains \"[\")",
                    "size": 4,
                    "title": "Azure Firewall",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkZones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalFirewalls",
                          "label": "Azure Firewall Total"
                        },
                        {
                          "columnId": "OkZones",
                          "label": "Firewalls in Availability Zone"
                        },
                        {
                          "columnId": "Zones",
                          "label": "Firewalls not in Availability Zone"
                        }
                      ]
                    }
                  },
                  "name": "azure firewall step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, SkuName, Tier, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize FwScore = \r\ntostring((\r\n//  TotalFirewalls= count(ResourceId),\r\n    dcountif(ResourceId, Zones contains \"[\") * 1 // OkZones\r\n//  Zones = dcountif(ResourceId, Zones !contains \"[\")\r\n)/1)",
                    "size": 4,
                    "title": "Azure Firewall - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkZones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "FwScore",
                        "formatter": 1
                      },
                      "showBorder": false
                    }
                  },
                  "name": "azure firewall step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/frontdoors\"\r\n| extend ResourceState = tostring(properties.resourceState)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, ResourceState, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, ResourceState, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalFrontDoors = count(ResourceId),\r\n    OkResourceState = dcountif(ResourceId, ResourceState == \"Enabled\"),\r\n    ResourceState = dcountif(ResourceId, ResourceState <> \"Enabled\")",
                    "size": 4,
                    "title": "Front Door",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkResourceState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ResourceState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalFrontDoors",
                          "label": "Front Door Total"
                        },
                        {
                          "columnId": "OkResourceState",
                          "label": "Front Door Resource State Enabled"
                        },
                        {
                          "columnId": "ResourceState",
                          "label": "Front Door Resource State not Enabled"
                        }
                      ]
                    }
                  },
                  "name": "front door step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/frontdoors\"\r\n| extend ResourceState = tostring(properties.resourceState)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, ResourceState, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, ResourceState, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize AfdScore = \r\ntostring((\r\n//  TotalFrontDoors = count(ResourceId),\r\n    dcountif(ResourceId, ResourceState == \"Enabled\") * 1 // OkResourceState\r\n//  ResourceState = dcountif(ResourceId, ResourceState <> \"Enabled\")\r\n)/1)",
                    "size": 4,
                    "title": "Front Door",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkResourceState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ResourceState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "AfdScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "front door step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend State = properties.operationalState\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Capacity = case(properties.sku.capacity <> \"\", properties.sku.capacity,\r\n    0)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, State, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Capacity, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, State, Type, Location, ResourceGroup, Zones, SkuName, Tier, Criticality, Capacity, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalAppGWs= count(ResourceId),\r\n    OkZones = dcountif(ResourceId, Zones contains \"[\"), \r\n    Zones = dcountif(ResourceId, Zones !contains \"[\"), \r\n    OkCapacity = dcountif(ResourceId, Capacity >= 2),\r\n    Capacity = dcountif(ResourceId, Capacity < 2)",
                    "size": 4,
                    "title": "Application Gateway",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkZones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalAppGWs",
                          "label": "Application Gateway Total"
                        },
                        {
                          "columnId": "OkZones",
                          "label": "Application Gateways in Availability Zone"
                        },
                        {
                          "columnId": "Zones",
                          "label": "Application Gateways not in Availability Zone"
                        },
                        {
                          "columnId": "OkCapacity",
                          "label": "Two or more instances"
                        },
                        {
                          "columnId": "Capacity",
                          "label": "Less than two instances"
                        }
                      ]
                    }
                  },
                  "name": "application gateway step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend State = properties.operationalState\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Capacity = case(properties.sku.capacity <> \"\", properties.sku.capacity,\r\n    0)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, State, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Capacity, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, State, Type, Location, ResourceGroup, Zones, SkuName, Tier, Criticality, Capacity, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize AppGwScore = \r\ntostring((\r\n//  TotalAppGWs= count(ResourceId),\r\n    dcountif(ResourceId, Zones contains \"[\") * 1 + // OkZones\r\n//  Zones = dcountif(ResourceId, Zones !contains \"[\"), \r\n    dcountif(ResourceId, Capacity >= 2) * 1 // OkCapacity\r\n//  Capacity = dcountif(ResourceId, Capacity < 2)\r\n)/2)",
                    "size": 4,
                    "title": "Application Gateway - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkZones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkCapacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 5
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "AppGwScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "application gateway step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/loadbalancers\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend ZoneRedundantRecommend = case(\r\n    (location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\", \"australiaeast\")) and (SkuName != \"Basic\"), \"Not Configured\",\r\n    zones contains \"[\", \"Configured\",\r\n    \"NA\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalLBs= count(ResourceId),\r\n    StdSkuName = dcountif(ResourceId, SkuName == \"Standard\"), \r\n    SkuName = dcountif(ResourceId, SkuName == \"Basic\"),\r\n    OkZoneRedundant = dcountif(ResourceId, Zones contains \"[\"), \r\n    ZoneRedundant = dcountif(ResourceId, Zones !contains \"[\") ",
                    "size": 4,
                    "title": "Load Balancer",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "StdSkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundantRecommend",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalLBs",
                          "label": "Load Balancer Total"
                        },
                        {
                          "columnId": "StdSkuName",
                          "label": "Standard Tier"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Basic Tier (No SLA)"
                        },
                        {
                          "columnId": "OkZoneRedundant",
                          "label": "Load Balancers in Availability Zone"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Load Balancers not in Availability Zone"
                        }
                      ]
                    }
                  },
                  "name": "load balancer step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/loadbalancers\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend ZoneRedundantRecommend = case(\r\n    (location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\", \"australiaeast\")) and (SkuName != \"Basic\"), \"Not Configured\",\r\n    zones contains \"[\", \"Configured\",\r\n    \"NA\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize LbScore = \r\ntostring((\r\n//  TotalLBs= count(ResourceId),\r\n    dcountif(ResourceId, SkuName == \"Standard\") * 1 + // StdSkuName\r\n//  SkuName = dcountif(ResourceId, SkuName == \"Basic\"),\r\n    dcountif(ResourceId, Zones contains \"[\") * 1 // OkZoneRedundant\r\n//  ZoneRedundant = dcountif(ResourceId, Zones !contains \"[\") \r\n) /2)",
                    "size": 4,
                    "title": "Load Balancer",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "StdSkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OkZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundantRecommend",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "LbScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "load balancer step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "network group",
            "styleSettings": {
              "margin": "5px",
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Storage",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ \"microsoft.storage/storageaccounts\" or type =~ \"microsoft.classicstorage/storageaccounts\"\r\n| extend isStorageV2 = iff(type =~ \"microsoft.storage/storageaccounts\", true, false)\r\n| extend SkuName = replace('-', '_', tostring(iff(isStorageV2, sku.name, properties.accountType)))\r\n| extend replicationCode = split(SkuName, '_', 1)[0]\r\n| extend ReplicationType = case(replicationCode =~ \"lrs\", 'Locally-redundant storage (LRS)', \r\n    replicationCode =~ \"zrs\", 'Zone-redundant storage (ZRS)',\r\n    replicationCode =~ \"grs\", 'Geo-redundant storage (GRS)',\r\n    replicationCode =~ \"ragrs\", 'Read-access geo-redundant storage (RA-GRS)',\r\n    replicationCode =~ \"gzrs\", 'Geo-zone-redundant storage (GZRS)',\r\n    replicationCode =~ \"ragzrs\", 'Read-access geo-zone-redundant storage (RA-GZRS)',\r\n    coalesce(replicationCode, '-'))\r\n| extend Created = tostring(properties.creationTime)\r\n| extend AccessTier = tostring(iff(isStorageV2, coalesce(properties.accessTier, '-'), '-'))\r\n| extend primaryStatus = iff(isStorageV2, properties.statusOfPrimary, properties.statusOfPrimaryRegion)\r\n| extend PrimaryStatus = case(primaryStatus =~ \"available\", 'Available',\r\n    primaryStatus =~ \"unavailable\", 'Unavailable',\r\n    coalesce(primaryStatus, '-'))\r\n| extend secondaryStatus = iff(isStorageV2, properties.statusOfSecondary, properties.statusOfSecondaryRegion)\r\n| extend SecondaryStatus = case(secondaryStatus =~ \"available\", 'Available',\r\n    secondaryStatus =~ \"unavailable\", 'Unavailable',\r\n    coalesce(secondaryStatus, '-'))\r\n| extend provisioningState = properties.provisioningState\r\n| extend ProvisioningState = case(provisioningState =~ \"creating\", 'Creating',\r\n    provisioningState =~ \"resolvingdns\", 'ResolvingDNS',\r\n    provisioningState =~ \"succeeded\", 'Succeeded',\r\n    provisioningState =~ \"deleting\", 'Deleting',\r\n    coalesce(provisioningState, '-'))\r\n| extend PrimaryLocation = tostring(iff(isStorageV2, properties.primaryLocation, properties.geoPrimaryRegion))\r\n| extend SecondaryLocation = case(isnotempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion)),\r\n    isempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), '-',\r\n    '-')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, name, type, location, subscriptionId, resourceGroup, kind, tags, SkuName, ReplicationType, Created, AccessTier, PrimaryLocation, PrimaryStatus, SecondaryLocation, SecondaryStatus, ProvisioningState, Criticality, Environment\r\n| extend typeDisplayName=case(type =~ 'microsoft.storage/storageaccounts', 'Storage account', type)\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, ResourceId, typeDisplayName, Kind = kind, ResourceGroup = resourceGroup, Location = location, SubscriptionId = subscriptionId, SecondaryStatus, AccessTier, ReplicationType, SecondaryLocation, SkuName, type, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, Name, Kind, Location, SecondaryLocation, ResourceGroup, typeDisplayName, SubscriptionId, SecondaryStatus, AccessTier, ReplicationType, SkuName, type, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize \r\n    TotalStorageAccounts = count(ResourceId),\r\n    CoolAccessTier = dcountif(ResourceId, AccessTier == \"Cool\"), \r\n    OtherAccessTier = dcountif(ResourceId, (AccessTier <> \"Cool\" and AccessTier <> \"-\")), \r\n    AccessTier = dcountif(ResourceId, AccessTier == \"-\"),\r\n    OkSecondaryLocation = dcountif(ResourceId, SecondaryLocation <> \"-\"),\r\n    SecondaryLocation = dcountif(ResourceId, SecondaryLocation == \"-\"), \r\n    SecondaryAvailableStatus = dcountif(ResourceId, SecondaryStatus == \"Available\"), \r\n    SecondaryStatus = dcountif(ResourceId, SecondaryStatus == \"-\"), \r\n    RAGRSReplicationType = dcountif(ResourceId, ReplicationType contains \"RA-GRS\"),\r\n    ReplicationType = dcountif(ResourceId, ReplicationType !contains \"RA-GRS\")",
                    "size": 4,
                    "title": "Storage Account",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CoolAccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OtherAccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "green",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryLocation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryAvailableStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "RAGRSReplicationType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReplicationType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalStorageAccounts",
                          "label": "Storage Account Total"
                        },
                        {
                          "columnId": "CoolAccessTier",
                          "label": "Cool Access Tier (lower SLA)"
                        },
                        {
                          "columnId": "OtherAccessTier",
                          "label": "Other Access Tier"
                        },
                        {
                          "columnId": "AccessTier",
                          "label": "No Access Tier"
                        },
                        {
                          "columnId": "OkSecondaryLocation",
                          "label": "With Secondary Location"
                        },
                        {
                          "columnId": "SecondaryLocation",
                          "label": "No Secondary Location"
                        },
                        {
                          "columnId": "SecondaryAvailableStatus",
                          "label": "Secondary Available"
                        },
                        {
                          "columnId": "SecondaryStatus",
                          "label": "No Secondary Status"
                        },
                        {
                          "columnId": "RAGRSReplicationType",
                          "label": "Replication Type RA-GRS (highest SLA)"
                        },
                        {
                          "columnId": "ReplicationType",
                          "label": "Replication Type not RA-GRS"
                        }
                      ]
                    }
                  },
                  "name": "query - 0",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ \"microsoft.storage/storageaccounts\" or type =~ \"microsoft.classicstorage/storageaccounts\"\r\n| extend isStorageV2 = iff(type =~ \"microsoft.storage/storageaccounts\", true, false)\r\n| extend SkuName = replace('-', '_', tostring(iff(isStorageV2, sku.name, properties.accountType)))\r\n| extend replicationCode = split(SkuName, '_', 1)[0]\r\n| extend ReplicationType = case(replicationCode =~ \"lrs\", 'Locally-redundant storage (LRS)', \r\n    replicationCode =~ \"zrs\", 'Zone-redundant storage (ZRS)',\r\n    replicationCode =~ \"grs\", 'Geo-redundant storage (GRS)',\r\n    replicationCode =~ \"ragrs\", 'Read-access geo-redundant storage (RA-GRS)',\r\n    replicationCode =~ \"gzrs\", 'Geo-zone-redundant storage (GZRS)',\r\n    replicationCode =~ \"ragzrs\", 'Read-access geo-zone-redundant storage (RA-GZRS)',\r\n    coalesce(replicationCode, '-'))\r\n| extend Created = tostring(properties.creationTime)\r\n| extend AccessTier = tostring(iff(isStorageV2, coalesce(properties.accessTier, '-'), '-'))\r\n| extend primaryStatus = iff(isStorageV2, properties.statusOfPrimary, properties.statusOfPrimaryRegion)\r\n| extend PrimaryStatus = case(primaryStatus =~ \"available\", 'Available',\r\n    primaryStatus =~ \"unavailable\", 'Unavailable',\r\n    coalesce(primaryStatus, '-'))\r\n| extend secondaryStatus = iff(isStorageV2, properties.statusOfSecondary, properties.statusOfSecondaryRegion)\r\n| extend SecondaryStatus = case(secondaryStatus =~ \"available\", 'Available',\r\n    secondaryStatus =~ \"unavailable\", 'Unavailable',\r\n    coalesce(secondaryStatus, '-'))\r\n| extend provisioningState = properties.provisioningState\r\n| extend ProvisioningState = case(provisioningState =~ \"creating\", 'Creating',\r\n    provisioningState =~ \"resolvingdns\", 'ResolvingDNS',\r\n    provisioningState =~ \"succeeded\", 'Succeeded',\r\n    provisioningState =~ \"deleting\", 'Deleting',\r\n    coalesce(provisioningState, '-'))\r\n| extend PrimaryLocation = tostring(iff(isStorageV2, properties.primaryLocation, properties.geoPrimaryRegion))\r\n| extend SecondaryLocation = case(isnotempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion)),\r\n    isempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), '-',\r\n    '-')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, name, type, location, subscriptionId, resourceGroup, kind, tags, SkuName, ReplicationType, Created, AccessTier, PrimaryLocation, PrimaryStatus, SecondaryLocation, SecondaryStatus, ProvisioningState, Criticality, Environment\r\n| extend typeDisplayName=case(type =~ 'microsoft.storage/storageaccounts', 'Storage account', type)\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, ResourceId, typeDisplayName, Kind = kind, ResourceGroup = resourceGroup, Location = location, SubscriptionId = subscriptionId, SecondaryStatus, AccessTier, ReplicationType, SecondaryLocation, SkuName, type, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, Name, Kind, Location, SecondaryLocation, ResourceGroup, typeDisplayName, SubscriptionId, SecondaryStatus, AccessTier, ReplicationType, SkuName, type, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| summarize StorageAccScore = \r\ntostring((\r\n//  TotalStorageAccounts = count(ResourceId),\r\n//  CoolAccessTier = dcountif(ResourceId, AccessTier == \"Cool\"), \r\n    dcountif(ResourceId, (AccessTier <> \"Cool\" and AccessTier <> \"-\")) * 1 + // OtherAccessTier\r\n//  AccessTier = dcountif(ResourceId, AccessTier == \"-\"),\r\n    dcountif(ResourceId, SecondaryLocation <> \"-\") * 1 + // OkSecondaryLocation\r\n//  SecondaryLocation = dcountif(ResourceId, SecondaryLocation == \"-\"), \r\n    dcountif(ResourceId, SecondaryStatus == \"Available\") * 1 + // SecondaryAvailableStatus\r\n//  SecondaryStatus = dcountif(ResourceId, SecondaryStatus == \"-\"), \r\n    dcountif(ResourceId, ReplicationType contains \"RA-GRS\") * 1 // RAGRSReplicationType\r\n//  ReplicationType = dcountif(ResourceId, ReplicationType !contains \"RA-GRS\")\r\n)/4)",
                    "size": 4,
                    "title": "Storage Account - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "CoolAccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OtherAccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "green",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AccessTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryLocation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryAvailableStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SecondaryStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "RAGRSReplicationType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReplicationType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "StorageAccScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "query - 0 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "storage group",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Web",
              "expandable": true,
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\n    sku == 'free',\r\n    'Free',\r\n    sku == 'shared',\r\n    'Shared',\r\n    sku == 'dynamic',\r\n    'Dynamic',\r\n    sku == 'isolated',\r\n    'Isolated',\r\n    sku == 'premiumv2',\r\n    'Premium V2',\r\n    sku == 'premium',\r\n    'Premium',\r\n    sku == 'basic',\r\n    'Basic',\r\n    sku == 'elasticpremium',\r\n    'Elastic Premium',\r\n    sku == 'premiumv3',\r\n    'Premium V3',\r\n    'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\n    state == 'stopped',\r\n    'Stopped',\r\n    state == 'running',\r\n    'Running',\r\n    'Other')\r\n| extend appType = case(\r\n    kind contains 'botapp',\r\n    'Bot Service',\r\n    kind contains 'api',\r\n    'Api App',\r\n    kind contains 'functionapp' and kind !contains 'workflowapp',\r\n    'Function App',\r\n    kind contains 'functionapp' and kind contains 'workflowapp',\r\n    'Logic App (Preview)',\r\n    'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, Status = status, Tier = pricingTier, AppServicePlanId = appServicePlanId, AppType = appType, ResourceId = id, Type = type, Kind = kind, Location = location, SubscriptionId = subscriptionId, ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Web App\"\r\n| summarize \r\n    TotalWebApps = count(ResourceId),\r\n    OkTier = dcountif(ResourceId, Tier !in (\"Shared\", \"Free\")),\r\n    Tier = dcountif(ResourceId, Tier in (\"Shared\", \"Free\"))",
                    "size": 4,
                    "title": "App Service - Web App",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "TotalWebApps",
                          "label": "Web App Total"
                        },
                        {
                          "columnId": "OkTier",
                          "label": "Tier with SLA"
                        },
                        {
                          "columnId": "Tier",
                          "label": "Shared or Free Tier"
                        }
                      ]
                    }
                  },
                  "name": "app service web app step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\n    sku == 'free',\r\n    'Free',\r\n    sku == 'shared',\r\n    'Shared',\r\n    sku == 'dynamic',\r\n    'Dynamic',\r\n    sku == 'isolated',\r\n    'Isolated',\r\n    sku == 'premiumv2',\r\n    'Premium V2',\r\n    sku == 'premium',\r\n    'Premium',\r\n    sku == 'basic',\r\n    'Basic',\r\n    sku == 'elasticpremium',\r\n    'Elastic Premium',\r\n    sku == 'premiumv3',\r\n    'Premium V3',\r\n    'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\n    state == 'stopped',\r\n    'Stopped',\r\n    state == 'running',\r\n    'Running',\r\n    'Other')\r\n| extend appType = case(\r\n    kind contains 'botapp',\r\n    'Bot Service',\r\n    kind contains 'api',\r\n    'Api App',\r\n    kind contains 'functionapp' and kind !contains 'workflowapp',\r\n    'Function App',\r\n    kind contains 'functionapp' and kind contains 'workflowapp',\r\n    'Logic App (Preview)',\r\n    'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system', 'v2.0,system', 'v12.0,system', 'v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name, Status = status, Tier = pricingTier, AppServicePlanId = appServicePlanId, AppType = appType, ResourceId = id, Type = type, Kind = kind, Location = location, SubscriptionId = subscriptionId, ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Web App\"\r\n| summarize AsWaScore = \r\ntostring((\r\n//  TotalWebApps = count(ResourceId),\r\n    dcountif(ResourceId, Tier !in (\"Shared\", \"Free\")) * 1 // OkTier\r\n//  Tier = dcountif(ResourceId, Tier in (\"Shared\", \"Free\"))\r\n)/1)",
                    "size": 4,
                    "title": "App Service - Web App - Score",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "tiles",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "OkTier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 5
                        }
                      ]
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "AsWaScore"
                      },
                      "showBorder": false
                    }
                  },
                  "name": "app service web app step - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "web group",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Summary"
      },
      "name": "summaryStep"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "value::all"
              ],
              "parameters": [
                {
                  "id": "059f8eeb-be9a-48dd-b4cd-1176d8dc529f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "description": "Lists all subscriptions.",
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "ac7e3b53-0894-4426-bc96-4e91af261f53",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "972eba34-11d9-42e3-8005-b0334b3a301b",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "5c4674db-3151-4a5f-bb5a-e5e886cc2c17",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "945162bf-cf6d-4956-952c-606acfd2c5e5",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy - Copy - Copy - Copy"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Advisor - Reliability",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by Description",
                    "size": 3,
                    "title": "By Recommendation",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by ImpactedField\r\n",
                    "size": 3,
                    "title": "By Resource Type",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by ImpactedValue\r\n",
                    "size": 3,
                    "title": "By Resource",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy - Copy - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by Impact\r\n",
                    "size": 3,
                    "title": "By Impact Level",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "query - 1 - Copy",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated, SubscriptionId = subscriptionId\r\n| where Category == \"HighAvailability\" \r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by SubscriptionName",
                    "size": 3,
                    "title": "By Subscription",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "subscription step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| extend Category = tostring(properties.category)\r\n| extend Description = tostring(properties.shortDescription.problem)\r\n| extend ImpactedField = tostring(properties.impactedField)\r\n| extend ImpactedValue = tostring(properties.impactedValue)\r\n| extend Impact = tostring(properties.impact)\r\n| extend LastUpdated = tostring(properties.lastUpdated)\r\n| project ImpactedValue, resourceGroup, Category, Impact, ImpactedField, Description, LastUpdated\r\n| where Category == \"HighAvailability\" \r\n| where resourceGroup in ({ResourceGroup})\r\n| summarize count() by resourceGroup",
                    "size": 3,
                    "title": "By Resource Group",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "visualization": "piechart"
                  },
                  "customWidth": "33",
                  "name": "resource group step",
                  "styleSettings": {
                    "margin": "5px"
                  }
                }
              ]
            },
            "name": "advisor group"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Consolidated Resources",
              "loadType": "explicit",
              "loadButtonText": "Show",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n// Type\r\n| where \r\n\t(type == 'microsoft.compute/virtualmachines' and tags.creationSource !contains \"aks\") or \r\n\t(type == \"microsoft.compute/virtualmachinescalesets\" and tags.orchestrator !contains \"Kubernetes\") or\r\n\t(type == 'microsoft.web/sites') or \r\n\t(type == \"microsoft.containerservice/managedclusters\") or \r\n\t(type == 'microsoft.sql/servers/databases')\r\n// aksname field to join - for AKS Only\r\n| extend aksname = case(\r\n\ttype == \"microsoft.containerservice/managedclusters\", tostring(name),\r\n\t\"Undefined\"\r\n)\r\n// join VMSS to get AKS properties\r\n| join kind = leftouter (\r\n\tresources \r\n\t| where type == \"microsoft.compute/virtualmachinescalesets\" and tags.orchestrator contains \"Kubernetes\" \r\n\t| extend aksname = tostring(split(resourceGroup, \"_\")[2]) \r\n\t| extend AvZones = coalesce(tostring(array_length(parse_json(zones))), '0'), AvSets = \"Scale Sets\"\r\n) on aksname\r\n// Sku\r\n| extend skuName = case(\r\n\ttype == 'microsoft.compute/virtualmachines', tostring(properties.hardwareProfile.vmSize),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', tostring(sku.name),\r\n\ttype == 'microsoft.web/sites', tostring(properties.sku),\r\n\ttype == 'microsoft.containerservice/managedclusters', tostring(properties.agentPoolProfiles[0].vmSize),\r\n\ttype == 'microsoft.sql/servers/databases', tostring(sku.name),\r\n\t\"Undefined\"\r\n)\r\n// Az\r\n| extend avZones = case(\r\n\t(type == 'microsoft.compute/virtualmachines' or type == 'microsoft.compute/virtualmachinescalesets'), coalesce(tostring(zones[0]), '0'), //VM, VMSS\r\n    (type == 'microsoft.containerservice/managedclusters' and AvZones <> \"\"), AvZones, //AKS\r\n    (type == 'microsoft.containerservice/managedclusters' and isempty(AvZones)), \"0\", //AKS\r\n    (type == 'microsoft.web/sites'), \"Not Applicable\", //Web App\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier <> 'DataWarehouse'), iif(isempty(properties.zoneRedundant) or properties.zoneRedundant == \"false\", '0', '1'), //SQL DB\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier == 'DataWarehouse'), \"Not Applicable\", //Synapse\r\n\t\"Undefined\"\r\n)\r\n// As\r\n| extend avSets = case(\r\n\ttype == 'microsoft.compute/virtualmachines', (coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-')),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', 'A regional (non-zonal) scale set uses placement groups, which act as an implicit availability set with five fault domains and five update domains.',\r\n\ttype == 'microsoft.web/sites', 'Not Applicable',\r\n\ttype == 'microsoft.containerservice/managedclusters', iif(AvSets == 'Scale Sets', \"A regional (non-zonal) scale set uses placement groups, which act as an implicit availability set with five fault domains and five update domains.\", \"Scale Sets Not Configured\"),\r\n\ttype == 'microsoft.sql/servers/databases', 'Not Applicable',\r\n\t\"Undefined\"\r\n)\r\n// VMSS Capacity and FD\r\n| extend Capacity = case(\r\n    type == 'microsoft.compute/virtualmachines', \"Not Applicable\",\r\n    type == 'microsoft.compute/virtualmachinescalesets', tostring(sku.capacity),\r\n    type == 'microsoft.web/sites', \"Not Applicable\",\r\n    type == 'microsoft.containerservice/managedclusters', iif(isnotempty(sku1.capacity), tostring(sku1.capacity), \"0\"), // AKS with or without VMSS\r\n\ttype == 'microsoft.sql/servers/databases', tostring(sku.capacity),\r\n    \"Undefined\"\r\n)\r\n| extend FaultDomain = case(\r\n    type == 'microsoft.compute/virtualmachines', \"Not Applicable\",\r\n    type == 'microsoft.compute/virtualmachinescalesets', iif(isnotempty(properties.platformFaultDomainCount), properties.platformFaultDomainCount, \"0\"),\r\n    type == 'microsoft.web/sites', \"Not Applicable\",\r\n    type == 'microsoft.containerservice/managedclusters', iif(isnotempty(properties1.platformFaultDomainCount), properties1.platformFaultDomainCount, \"0\"),\r\n\ttype == 'microsoft.sql/servers/databases', \"Not Applicable\",\r\n    \"Undefined\"\r\n)\r\n// Disk\r\n| extend osDisk = case(\r\n\ttype == 'microsoft.compute/virtualmachines', properties.storageProfile.osDisk.managedDisk.storageAccountType,\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType,\r\n\ttype == 'microsoft.web/sites', 'Not Applicable',\r\n\ttype == 'microsoft.containerservice/managedclusters', iff(properties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType <> \"\", properties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType, 'Unknown'),\r\n\ttype == 'microsoft.sql/servers/databases', properties.storageAccountType,\r\n\t'Not Applicable'\r\n)\r\n// State\r\n| extend state = case(\r\n\ttype == 'microsoft.compute/virtualmachines', tostring(properties.extended.instanceView.powerState.displayStatus),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', tostring(properties.provisioningState),\r\n\ttype == 'microsoft.web/sites', tostring(properties.state),\r\n\ttype == 'microsoft.containerservice/managedclusters', tostring(properties.provisioningState),\r\n\ttype == 'microsoft.sql/servers/databases', tostring(properties.status),\r\n\t\"Undefined\"\r\n) // VM (VM Running), VMSS (succeeded for 1 instances, all succeeded for multiple instances), AKS (Succeeded)\r\n// DB specific properties\r\n| extend ReadReplica = case (\r\n\ttype in ('microsoft.compute/virtualmachines', 'microsoft.compute/virtualmachinescalesets', 'microsoft.web/sites', 'microsoft.containerservice/managedclusters'), \"Not Applicable\",\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier <> 'DataWarehouse'), tostring(properties.readReplicaCount), // SQL DB\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier == 'DataWarehouse'), \"Not Applicable\", // Synapse\r\n\t\"Undefined\"\r\n)\r\n//\r\n// Tags\r\n| extend criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n// Tags\r\n// ResourceId\r\n| extend resourceId = tolower(tostring(id))\r\n// Workbook Filter\r\n| project \r\nType = tolower(type),\r\nSkuName = tolower(skuName),\r\nKind = tolower(kind),\r\nSubscriptionId = subscriptionId,\r\nName = tolower(name),\r\nState = tolower(state),\r\nLocation = tolower(location),\r\nResourceGroup = resourceGroup,\r\nZones = tolower(tostring(zones)),\r\nAvailabilityZone = tolower(avZones),\r\nAvailabilitySet = tolower(avSets),\r\nCapacity = tolower(Capacity),\r\nFaultDomain = tolower(FaultDomain),\r\nOSDisk = tolower(osDisk),\r\nReadReplica = tolower(ReadReplica), \r\nCriticality = criticality,\r\nEnvironment = environment,\r\nResourceId = resourceId\r\n// Backup VM, VMSS\r\n| join kind = leftouter (\r\n\tsecurityresources\r\n\t| where properties.displayName contains \"Azure Backup should\"\r\n\t| extend Backup = tostring(properties.status.code)\r\n\t| project ResourceId = tolower(tostring(properties.resourceDetails.Id)), Backup\r\n\t)\r\n\ton ResourceId\r\n| extend Backup = case(\r\n\tBackup == \"Healthy\" or Backup == \"Unhealthy\", Backup,\r\n\t\"Unknown\")\r\n| extend Backup = case(\r\n\t(Type == 'microsoft.compute/virtualmachines') and (Backup == \"Healthy\" or Backup == \"Unhealthy\"), Backup, \r\n\t(Type == \"microsoft.compute/virtualmachinescalesets\"), \"Not Applicable\", \r\n    (Type == \"microsoft.containerservice/managedclusters\"), \"Not Applicable\",\r\n\t(Type == 'microsoft.sql/servers/databases'), \"Not Applicable\", \r\n\t\"Unknown\"\r\n\t)\r\n| project Type, SkuName, Kind, SubscriptionId, Name, State, Location, ResourceGroup, Zones, AvailabilityZone, AvailabilitySet, Capacity, FaultDomain, OSDisk, ReadReplica, Backup, Criticality, Environment, ResourceId\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| extend OSDisk = case(\r\n\tisnotempty(OSDisk), OSDisk,\r\n\tisempty(OSDisk) and (Type == 'microsoft.compute/virtualmachines') and State <> 'VM Running', 'Unknown, start VM to get disk information.',\r\n\t\"Unknown\")\r\n| extend AvailabilitySet = case(\r\n\tAvailabilitySet == '-', 'None',\r\n\tisnotempty(AvailabilitySet), AvailabilitySet,\r\n\t\"Unknown\")\r\n| extend Backup = tolower(Backup)\r\n| project Type, SkuName, Kind, SubscriptionId, SubscriptionName = tolower(SubscriptionName), Name, State, Location, ResourceGroup, Zones, AvailabilityZone, AvailabilitySet, Capacity, FaultDomain, OSDisk, ReadReplica, Backup, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| sort by Type\r\n| summarize \r\n    ResourceTotal=count(ResourceId),\r\n    OtherSku=dcountif(ResourceId, ((SkuName !contains \"shared\") and (SkuName !contains \"free\") and (SkuName !contains \"basic\"))),\r\n    DevelopmentSkuCount=dcountif(ResourceId, SkuName contains \"development\"), \r\n    SharedSkuCount=dcountif(ResourceId, SkuName contains \"shared\"),\r\n    FreeSkuCount=dcountif(ResourceId, SkuName contains \"free\"),\r\n    BasicSkuCount=dcountif(ResourceId, SkuName contains \"basic\"), \r\n    VMDeallocatedStateCount=dcountif(ResourceId, State contains \"vm deallocated\"),\r\n    NoAvZoneCount=dcountif(ResourceId, (AvailabilityZone contains \"0\")),\r\n    NAAvZoneCount=dcountif(ResourceId, (AvailabilityZone contains \"not applicable\")),\r\n    AvZoneCount=dcountif(ResourceId, (AvailabilityZone !contains \"0\") and (AvailabilityZone !contains \"not applicable\")),\r\n    NoAvSetCount=dcountif(ResourceId, (AvailabilitySet contains \"none\") or (AvailabilitySet contains \"scale sets not configured\")),\r\n    NAAvSetCount=dcountif(ResourceId, AvailabilitySet contains \"not applicable\"),\r\n    AvSetCount=dcountif(ResourceId, (AvailabilitySet !contains \"none\") and (AvailabilitySet !contains \"not applicable\") and (AvailabilitySet !contains \"scale sets not configured\")),\r\n    NACapacityCount=dcountif(ResourceId, (Capacity contains \"not applicable\")),\r\n    ZeroCapacityCount=dcountif(ResourceId, (Capacity contains \"0\")),\r\n    Gt1CapacityCount=dcountif(ResourceId, (Capacity !contains \"not applicable\") and (Capacity !contains \"0\") and (Capacity !contains \"1\") and (Capacity !contains \"undefined\")),\r\n    NAFaultDomainCount=dcountif(ResourceId, (FaultDomain contains \"not applicable\")),\r\n    ZeroFaultDomainCount=dcountif(ResourceId, (FaultDomain contains \"0\")),\r\n    Gt1FaultDomainCount=dcountif(ResourceId, (FaultDomain !contains \"not applicable\") and (FaultDomain !contains \"0\") and (FaultDomain !contains \"1\") and (FaultDomain !contains \"undefined\")),\r\n    NAOSDiskCount=dcountif(ResourceId, (OSDisk contains \"not applicable\")),\r\n    UnknownOSDiskCount=dcountif(ResourceId, (OSDisk contains \"Unknown\")),\r\n    OtherOSDiskCount=dcountif(ResourceId, (OSDisk !contains \"premium\") or (OSDisk !contains \"ultra\")),\r\n    PremorUltOSDiskCount=dcountif(ResourceId, (OSDisk contains \"premium\") or (OSDisk contains \"ultra\")),\r\n    NABackupCount=dcountif(ResourceId, (Backup contains \"not applicable\")),\r\n    UnknownBackupCount=dcountif(ResourceId, (Backup contains \"Unknown\")),\r\n    HealthyBackupCount=dcountif(ResourceId, (Backup == \"healthy\")),\r\n    UnhealthyBackupCount=dcountif(ResourceId, (Backup == \"unhealthy\")),\r\n\tDBOnlineStateCount=dcountif(ResourceId, State contains \"online\"),\r\n\tDBPausedStateCount=dcountif(ResourceId, State contains \"paused\"),\r\n\tDBGeoStorage=dcountif(ResourceId, OSDisk == \"grs\"),\r\n\tDBLrsStorage=dcountif(ResourceId, OSDisk == \"lrs\"),\r\n\tGt0DbReplica=dcountif(ResourceId, (ReadReplica !contains \"not applicable\") and (ReadReplica !contains \"0\") and (ReadReplica !contains \"undefined\")),\r\n\tLt1DbReplica=dcountif(ResourceId, ReadReplica contains \"0\")\r\n    by Type, Environment, Criticality",
                    "size": 0,
                    "title": "Resource Summary",
                    "showExportToExcel": true,
                    "exportToExcelOptions": "all",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "mission critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Type"
                        ],
                        "expandTopLevel": true
                      },
                      "sortBy": [
                        {
                          "itemKey": "ResourceTotal",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Type",
                          "label": "Service"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "ResourceTotal",
                          "label": "Resource Total"
                        },
                        {
                          "columnId": "OtherSku",
                          "label": "Regular SKU"
                        },
                        {
                          "columnId": "DevelopmentSkuCount",
                          "label": "Development SKU"
                        },
                        {
                          "columnId": "SharedSkuCount",
                          "label": "Shared SKU"
                        },
                        {
                          "columnId": "FreeSkuCount",
                          "label": "Free SKU"
                        },
                        {
                          "columnId": "BasicSkuCount",
                          "label": "Basic SKU"
                        },
                        {
                          "columnId": "VMDeallocatedStateCount",
                          "label": "VM Deallocated"
                        },
                        {
                          "columnId": "NoAvZoneCount",
                          "label": "Availability Zone - Not Configured"
                        },
                        {
                          "columnId": "NAAvZoneCount",
                          "label": "Availability Zone - Not Applicable"
                        },
                        {
                          "columnId": "AvZoneCount",
                          "label": "Availability Zone - Configured"
                        },
                        {
                          "columnId": "NoAvSetCount",
                          "label": "Availability Set - Not Configured"
                        },
                        {
                          "columnId": "NAAvSetCount",
                          "label": "Availability Set - Not Applicable"
                        },
                        {
                          "columnId": "AvSetCount",
                          "label": "Availability Set - Configured"
                        },
                        {
                          "columnId": "NACapacityCount",
                          "label": "Capacity - Not Applicable"
                        },
                        {
                          "columnId": "ZeroCapacityCount",
                          "label": "Capacity - Zero"
                        },
                        {
                          "columnId": "Gt1CapacityCount",
                          "label": "Capacity - Above 1"
                        },
                        {
                          "columnId": "NAFaultDomainCount",
                          "label": "Fault Domain - Not Applicable"
                        },
                        {
                          "columnId": "ZeroFaultDomainCount",
                          "label": "Fault Domain - Zero"
                        },
                        {
                          "columnId": "Gt1FaultDomainCount",
                          "label": "Fault Domain - Above 1"
                        },
                        {
                          "columnId": "NAOSDiskCount",
                          "label": "OS Disk - Not Applicable"
                        },
                        {
                          "columnId": "UnknownOSDiskCount",
                          "label": "OS Disk - Unknown"
                        },
                        {
                          "columnId": "OtherOSDiskCount",
                          "label": "OS Disk - No Premium/Ultra"
                        },
                        {
                          "columnId": "PremorUltOSDiskCount",
                          "label": "OS Disk - Premium/Ultra"
                        },
                        {
                          "columnId": "NABackupCount",
                          "label": "Backup - Not Applicable"
                        },
                        {
                          "columnId": "UnknownBackupCount",
                          "label": "Backup - Unknown"
                        },
                        {
                          "columnId": "HealthyBackupCount",
                          "label": "Backup - Healthy"
                        },
                        {
                          "columnId": "UnhealthyBackupCount",
                          "label": "Backup - Unhealthy"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "ResourceTotal",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n// Type\r\n| where \r\n\t(type == 'microsoft.compute/virtualmachines' and tags.creationSource !contains \"aks\") or \r\n\t(type == \"microsoft.compute/virtualmachinescalesets\" and tags.orchestrator !contains \"Kubernetes\") or\r\n\t(type == 'microsoft.web/sites') or \r\n\t(type == \"microsoft.containerservice/managedclusters\") or \r\n\t(type == 'microsoft.sql/servers/databases')\r\n// aksname field to join - for AKS Only\r\n| extend aksname = case(\r\n\ttype == \"microsoft.containerservice/managedclusters\", tostring(name),\r\n\t\"Undefined\"\r\n)\r\n// join VMSS to get AKS properties\r\n| join kind = leftouter (\r\n\tresources \r\n\t| where type == \"microsoft.compute/virtualmachinescalesets\" and tags.orchestrator contains \"Kubernetes\" \r\n\t| extend aksname = tostring(split(resourceGroup, \"_\")[2]) \r\n\t| extend AvZones = coalesce(tostring(array_length(parse_json(zones))), '0'), AvSets = \"Scale Sets\"\r\n) on aksname\r\n// Sku\r\n| extend skuName = case(\r\n\ttype == 'microsoft.compute/virtualmachines', tostring(properties.hardwareProfile.vmSize),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', tostring(sku.name),\r\n\ttype == 'microsoft.web/sites', tostring(properties.sku),\r\n\ttype == 'microsoft.containerservice/managedclusters', tostring(properties.agentPoolProfiles[0].vmSize),\r\n\ttype == 'microsoft.sql/servers/databases', tostring(sku.name),\r\n\t\"Undefined\"\r\n)\r\n// Az\r\n| extend avZones = case(\r\n\t(type == 'microsoft.compute/virtualmachines' or type == 'microsoft.compute/virtualmachinescalesets'), coalesce(tostring(zones[0]), '0'), //VM, VMSS\r\n    (type == 'microsoft.containerservice/managedclusters' and AvZones <> \"\"), AvZones, //AKS\r\n    (type == 'microsoft.containerservice/managedclusters' and isempty(AvZones)), \"0\", //AKS\r\n    (type == 'microsoft.web/sites'), \"Not Applicable\", //Web App\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier <> 'DataWarehouse'), iif(isempty(properties.zoneRedundant) or properties.zoneRedundant == \"false\", '0', '1'), //SQL DB\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier == 'DataWarehouse'), \"Not Applicable\", //Synapse\r\n\t\"Undefined\"\r\n)\r\n// As\r\n| extend avSets = case(\r\n\ttype == 'microsoft.compute/virtualmachines', (coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-')),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', 'A regional (non-zonal) scale set uses placement groups, which act as an implicit availability set with five fault domains and five update domains.',\r\n\ttype == 'microsoft.web/sites', 'Not Applicable',\r\n\ttype == 'microsoft.containerservice/managedclusters', iif(AvSets == 'Scale Sets', \"A regional (non-zonal) scale set uses placement groups, which act as an implicit availability set with five fault domains and five update domains.\", \"Scale Sets Not Configured\"),\r\n\ttype == 'microsoft.sql/servers/databases', 'Not Applicable',\r\n\t\"Undefined\"\r\n)\r\n// VMSS Capacity and FD\r\n| extend Capacity = case(\r\n    type == 'microsoft.compute/virtualmachines', \"Not Applicable\",\r\n    type == 'microsoft.compute/virtualmachinescalesets', tostring(sku.capacity),\r\n    type == 'microsoft.web/sites', \"Not Applicable\",\r\n    type == 'microsoft.containerservice/managedclusters', iif(isnotempty(sku1.capacity), tostring(sku1.capacity), \"0\"), // AKS with or without VMSS\r\n\ttype == 'microsoft.sql/servers/databases', tostring(sku.capacity),\r\n    \"Undefined\"\r\n)\r\n| extend FaultDomain = case(\r\n    type == 'microsoft.compute/virtualmachines', \"Not Applicable\",\r\n    type == 'microsoft.compute/virtualmachinescalesets', iif(isnotempty(properties.platformFaultDomainCount), properties.platformFaultDomainCount, \"0\"),\r\n    type == 'microsoft.web/sites', \"Not Applicable\",\r\n    type == 'microsoft.containerservice/managedclusters', iif(isnotempty(properties1.platformFaultDomainCount), properties1.platformFaultDomainCount, \"0\"),\r\n\ttype == 'microsoft.sql/servers/databases', \"Not Applicable\",\r\n    \"Undefined\"\r\n)\r\n// Disk\r\n| extend osDisk = case(\r\n\ttype == 'microsoft.compute/virtualmachines', properties.storageProfile.osDisk.managedDisk.storageAccountType,\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType,\r\n\ttype == 'microsoft.web/sites', 'Not Applicable',\r\n\ttype == 'microsoft.containerservice/managedclusters', iff(properties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType <> \"\", properties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType, 'Unknown'),\r\n\ttype == 'microsoft.sql/servers/databases', properties.storageAccountType,\r\n\t'Not Applicable'\r\n)\r\n// State\r\n| extend state = case(\r\n\ttype == 'microsoft.compute/virtualmachines', tostring(properties.extended.instanceView.powerState.displayStatus),\r\n\ttype == 'microsoft.compute/virtualmachinescalesets', tostring(properties.provisioningState),\r\n\ttype == 'microsoft.web/sites', tostring(properties.state),\r\n\ttype == 'microsoft.containerservice/managedclusters', tostring(properties.provisioningState),\r\n\ttype == 'microsoft.sql/servers/databases', tostring(properties.status),\r\n\t\"Undefined\"\r\n) // VM (VM Running), VMSS (succeeded for 1 instances, all succeeded for multiple instances), AKS (Succeeded)\r\n// DB specific properties\r\n| extend ReadReplica = case (\r\n\ttype in ('microsoft.compute/virtualmachines', 'microsoft.compute/virtualmachinescalesets', 'microsoft.web/sites', 'microsoft.containerservice/managedclusters'), \"Not Applicable\",\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier <> 'DataWarehouse'), tostring(properties.readReplicaCount), // SQL DB\r\n\t(type == 'microsoft.sql/servers/databases' and sku.tier == 'DataWarehouse'), \"Not Applicable\", // Synapse\r\n\t\"Undefined\"\r\n)\r\n//\r\n// Tags\r\n| extend criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n// Tags\r\n// ResourceId\r\n| extend resourceId = tolower(tostring(id))\r\n// Workbook Filter\r\n| project \r\nType = tolower(type),\r\nSkuName = tolower(skuName),\r\nKind = tolower(kind),\r\nSubscriptionId = subscriptionId,\r\nName = tolower(name),\r\nState = tolower(state),\r\nLocation = tolower(location),\r\nResourceGroup = resourceGroup,\r\nZones = tolower(tostring(zones)),\r\nAvailabilityZone = tolower(avZones),\r\nAvailabilitySet = tolower(avSets),\r\nCapacity = tolower(Capacity),\r\nFaultDomain = tolower(FaultDomain),\r\nOSDisk = tolower(osDisk),\r\nReadReplica = tolower(ReadReplica), \r\nCriticality = criticality,\r\nEnvironment = environment,\r\nResourceId = resourceId\r\n// Backup VM, VMSS\r\n| join kind = leftouter (\r\n\tsecurityresources\r\n\t| where properties.displayName contains \"Azure Backup should\"\r\n\t| extend Backup = tostring(properties.status.code)\r\n\t| project ResourceId = tolower(tostring(properties.resourceDetails.Id)), Backup\r\n\t)\r\n\ton ResourceId\r\n| extend Backup = case(\r\n\tBackup == \"Healthy\" or Backup == \"Unhealthy\", Backup,\r\n\t\"Unknown\")\r\n| extend Backup = case(\r\n\t(Type == 'microsoft.compute/virtualmachines') and (Backup == \"Healthy\" or Backup == \"Unhealthy\"), Backup, \r\n\t(Type == \"microsoft.compute/virtualmachinescalesets\"), \"Not Applicable\", \r\n    (Type == \"microsoft.containerservice/managedclusters\"), \"Not Applicable\",\r\n\t(Type == 'microsoft.sql/servers/databases'), \"Not Applicable\", \r\n\t\"Unknown\"\r\n\t)\r\n| project Type, SkuName, Kind, SubscriptionId, Name, State, Location, ResourceGroup, Zones, AvailabilityZone, AvailabilitySet, Capacity, FaultDomain, OSDisk, ReadReplica, Backup, Criticality, Environment, ResourceId\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| extend OSDisk = case(\r\n\tisnotempty(OSDisk), OSDisk,\r\n\tisempty(OSDisk) and (Type == 'microsoft.compute/virtualmachines') and State <> 'VM Running', 'Unknown, start VM to get disk information.',\r\n\t\"Unknown\")\r\n| extend AvailabilitySet = case(\r\n\tAvailabilitySet == '-', 'None',\r\n\tisnotempty(AvailabilitySet), AvailabilitySet,\r\n\t\"Unknown\")\r\n| extend Backup = tolower(Backup)\r\n| project Type, SkuName, Kind, SubscriptionId, SubscriptionName = tolower(SubscriptionName), Name, State, Location, ResourceGroup, Zones, AvailabilityZone, AvailabilitySet, Capacity, FaultDomain, OSDisk, ReadReplica, Backup, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "All Resource Types",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "free",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "shared",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "vm running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "succeeded",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "all succeeded",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "gray",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "AvailabilityZone",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": "true"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "1",
                                "representation": "orange",
                                "text": "false"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvailabilitySet",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "None",
                                "representation": "orange",
                                "text": "false"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "a regional",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "not applicable",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "green",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-1",
                                "representation": "gray",
                                "text": "not applicable"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "-2",
                                "representation": "gray",
                                "text": "unknown"
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "2",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "2",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "FaultDomain",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-1",
                                "representation": "gray",
                                "text": "not applicable"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "-2",
                                "representation": "gray",
                                "text": "unknown"
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "2",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "2",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDisk",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "not applicable",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Unknown",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "premium",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "ultra",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "standard",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "unknown",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "grs",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "lrs",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplica",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "-1",
                                "representation": "gray",
                                "text": "not applicable"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "-2",
                                "representation": "gray",
                                "text": "unknown"
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "1",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Backup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "unknown",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "healthy",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "unhealthy",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "not applicable",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "mission critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "SkuName"
                        },
                        {
                          "columnId": "Kind"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "State"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup"
                        },
                        {
                          "columnId": "AvailabilitySet"
                        },
                        {
                          "columnId": "OSDisk"
                        },
                        {
                          "columnId": "Backup"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "combined step"
                }
              ]
            },
            "name": "arg consolidated group"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Summary2"
      },
      "name": "summary group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "7633231b-140c-44a4-93c5-d59c36b37838",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "099d86cc-9ccb-4234-84c1-943e15f77ff7",
                        "version": "KqlParameterItem/1.0",
                        "name": "Criticality",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "1153a137-08bc-4832-9783-009b628f0a9d",
                        "version": "KqlParameterItem/1.0",
                        "name": "SLA",
                        "label": "Show SLA",
                        "type": 10,
                        "description": "This will show the SLA information for the focus area.",
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "f9d90ba0-dae5-45b5-9e9a-68dbed7f0ad1",
                        "version": "KqlParameterItem/1.0",
                        "name": "Help",
                        "label": "Show Help",
                        "type": 10,
                        "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 0 - Copy"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "parameters": [
                      {
                        "id": "bd278e9e-21fd-460d-a0e3-b13e077a2309",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": true,
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all"
                      },
                      {
                        "id": "3496ab42-96bf-46c5-ab68-e409c4ea091c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Criticality",
                        "type": 2,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      },
                      {
                        "id": "d55f4971-fd8a-417e-9405-a27d1d856ee4",
                        "version": "KqlParameterItem/1.0",
                        "name": "SLA",
                        "label": "Show SLA",
                        "type": 10,
                        "description": "This will show the SLA information for the focus area.",
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      },
                      {
                        "id": "382d0692-c167-45f9-bc53-173cfe46540d",
                        "version": "KqlParameterItem/1.0",
                        "name": "Help",
                        "label": "Show Help",
                        "type": 10,
                        "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 0"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Backup"
            },
            "name": "Backup"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "c7be4626-a5bf-49c2-83d4-e78f4d5c52a8",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "9017d91b-7134-4b67-808d-0e96c1664fb0",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "0fb220d8-a871-43b1-b907-c5bd60c7ce92",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "f92c10d3-c07c-4063-87a1-40c822237576",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "fc2a73d7-6fba-4dd6-890a-568f15e3d1d5",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "4fd81c4f-7bca-4138-81e7-67c9f86517df",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy - Copy"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "111d0db9-8c81-413d-9d93-bca6541aa953",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Firewall",
                  "subTarget": "AF",
                  "style": "link"
                },
                {
                  "id": "c7031524-3e4c-417b-8675-f49985b0e4a9",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Front Door",
                  "subTarget": "AFD",
                  "style": "link"
                },
                {
                  "id": "15e12511-eaa3-457d-9de5-aad6fc445c2d",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Application Gateway",
                  "subTarget": "AG",
                  "style": "link"
                },
                {
                  "id": "ff60a2f0-1c78-4a47-8f21-aaee8675cc1c",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Load Balancer",
                  "subTarget": "LB",
                  "style": "link"
                },
                {
                  "id": "9b2af52f-ffd5-43d7-9055-9a76f56ca89a",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Web Application Firewall",
                  "subTarget": "WAF",
                  "style": "link"
                }
              ]
            },
            "name": "links - 5"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Load Balancer](https://azure.microsoft.com/en-us/support/legal/sla/load-balancer/v1_0/)\r\n* We guarantee that a Load Balanced Endpoint using Azure Standard Load Balancer, serving two or more Healthy Virtual Machine Instances, will be available 99.99% of the time.\r\n* Basic Load Balancer is excluded from this SLA.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/load-balancer/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2 - Copy - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* With Standard Load Balancer, you can scale your applications and create highly available services. Load balancer supports both inbound and outbound scenarios. Load balancer provides low latency and high throughput, and scales up to millions of flows for all TCP and UDP applications.\r\n* Increase availability by distributing resources within and across zones.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/loadbalancers\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend ZoneRedundantRecommend = case(\r\n\t(location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\",\"australiaeast\")) and (SkuName != \"Basic\"), \"Not Configured\",\r\n\tzones contains \"[\", \"Configured\",\r\n\t\"NA\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend SubscriptionName = name\r\n| distinct SubscriptionName, subscriptionId\r\n| project SubscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project SubscriptionName,SubscriptionId,Name,Type,Location,ResourceGroup, Zones, SkuName, Tier, ZoneRedundantRecommend, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SkuName",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Standard",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Basic",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundantRecommend",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Not Configured",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "NA",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Zones"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Sku Name"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "ZoneRedundantRecommend",
                          "label": "Zone Redundant Recommend"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "query - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "LB"
            },
            "name": "LB"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Web Application Firewall](https://azure.microsoft.com/en-us/support/legal/sla/web-application-firewall/v1_0/)\r\n* Web Application Firewall availability guarantees are included in the SLA of the deployment option chosen, Application Gateway or Azure Front Door. Please see the [Application Gateway SLA](https://azure.microsoft.com/support/legal/sla/application-gateway/), and [Azure Front Door SLA](https://azure.microsoft.com/support/legal/sla/frontdoor/) for more details.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/web-application-firewall/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "WAFSLA"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "WAF"
            },
            "name": "WAF"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Application Gateway](https://azure.microsoft.com/en-us/support/legal/sla/application-gateway/v1_2/)\r\n* We guarantee that each Application Gateway Cloud Service having two or more medium or larger instances, or deployments capable of supporting autoscale or zone redundancy, will be available at least 99.95% of the time.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/application-gateway/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2 - Copy - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* Deploy Application Gateway with at least two instances. A single instance is a single point of failure. Use two or more instances for redundancy and scalability. In order to qualify for the SLA, you must provision two or more medium or larger instances.\r\n* Capacity specifies the number of instances of an application gateway.\r\n* An Application Gateway can scale based on customer demand and span multiple availability zones for optimal availability.\r\n* Two autoscaling configuration types are supported:\r\n\t* Fixed capacity mode. In this mode, the application gateway does not autoscale and operates at a fixed Scale Unit capacity.\r\n\t* Autoscaling mode. In this mode, the application gateway autoscales based on the application traffic pattern.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/applicationgateways\"\r\n| extend State = properties.operationalState\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Capacity = case(properties.sku.capacity <> \"\", properties.sku.capacity,\r\n\t\t\t0)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = id, Name = name, State, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Capacity, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend SubscriptionName = name\r\n| distinct SubscriptionName, subscriptionId\r\n| project SubscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project SubscriptionName,SubscriptionId,Name,State, Type,Location,ResourceGroup, Zones, SkuName, Tier, Criticality, Capacity, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "[\"",
                                "representation": "success",
                                "text": "Configured"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "2",
                                "text": "Not Configured"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "1",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<=",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "State"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Zones"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Sku Name"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Capacity"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "query - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "AG"
            },
            "name": "AG"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure Firewall](https://azure.microsoft.com/en-us/support/legal/sla/azure-firewall/v1_1/)\r\n* Azure Firewall offers fully stateful native firewall capabilities for Virtual Network resources, with built-in high availability and the ability to scale automatically.\r\n* We guarantee that Azure Firewall will be available at least 99.95% of the time, when deployed within a single Availability Zone.\r\n* We guarantee that Azure Firewall will be available at least 99.99% of the time, when deployed within two or more Availability Zones in the same Azure region.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/azure-firewall/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "AF SLA"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* Azure Firewall can be configured during deployment to span multiple Availability Zones for increased availability.\r\n* Refer to [Deploy an Azure Firewall with Availability Zones](https://docs.microsoft.com/en-us/azure/firewall/deploy-availability-zone-powershell) for more information.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/azurefirewalls\"\r\n| extend SkuName = tostring(properties.sku.name)\r\n| extend Tier = tostring(properties.sku.tier)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName, Tier, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend SubscriptionName = name\r\n| distinct SubscriptionName, subscriptionId\r\n| project SubscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project SubscriptionName,SubscriptionId,Name,Type,Location,ResourceGroup, Zones, SkuName, Tier, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "[\"",
                                "representation": "success",
                                "text": "Configured"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "2",
                                "text": "Warning"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Zones"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Sku Name"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "query - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "AF"
            },
            "name": "AF"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure Front Door](https://azure.microsoft.com/en-us/support/legal/sla/frontdoor/v1_0/)\r\n* We guarantee that at least 99.99% of the time Front Door Service will respond to client requests and deliver the requested content without error. We will review and accept data from any commercially reasonable independent measurement system that you choose to monitor your content. You must select a set of agents from the measurement system’s list of standard agents that are generally available and represent at least five geographically diverse locations in major worldwide metropolitan areas (excluding PR of China).\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/frontdoor/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "AFD SLA"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.network/frontdoors\"\r\n| extend ResourceState = tostring(properties.resourceState)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, ResourceState, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, ResourceState, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ResourceState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ResourceId",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      }
                    }
                  },
                  "name": "query - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "AFD"
            },
            "name": "AFD"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Networking"
      },
      "name": "Networking"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "100d329a-08a8-4027-85e7-635f580ad68f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "8d4d4f28-115e-4d89-b6a0-229ed44487b1",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "8795144d-3202-4c47-9f6f-d7b13e1fe357",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "2ae46e08-6068-4e1d-b8b0-65e7d377d873",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "0414f091-7725-4687-99f1-00e83440db18",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "aa45d66d-d51a-4cbe-bdcf-e2d69414beb7",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "bec50763-3978-4739-8e39-ffc849278745",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Machines",
                  "subTarget": "cVM",
                  "style": "link"
                },
                {
                  "id": "db54cc9d-e67e-4687-b9e6-e73aefb9638c",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Virtual Machine Scale Sets",
                  "subTarget": "cVMSS",
                  "style": "link"
                },
                {
                  "id": "c030fefd-838e-4625-9205-9083aa10aa1d",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "App Service - Function App",
                  "subTarget": "cASFA",
                  "style": "link"
                }
              ]
            },
            "name": "links - 5"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Virtual Machines](https://azure.microsoft.com/en-us/support/legal/sla/virtual-machines/v1_9/)\r\n* For all Virtual Machines that have two or more instances deployed across two or more Availability Zones in the same Azure region, we guarantee you will have Virtual Machine Connectivity to at least one instance at least 99.99% of the time.\r\n* For all Virtual Machines that have two or more instances deployed in the same Availability Set or in the same Dedicated Host Group, we guarantee you will have Virtual Machine Connectivity to at least one instance at least 99.95% of the time.\r\n* For any Single Instance Virtual Machine using Premium SSD or Ultra Disk for all Operating System Disks and Data Disks, we guarantee you will have Virtual Machine Connectivity of at least 99.9%.\r\n* For any Single Instance Virtual Machine using Standard SSD Managed Disks for Operating System Disk and Data Disks, we guarantee you will have Virtual Machine Connectivity of at least 99.5%.\r\n* For any Single Instance Virtual Machine using Standard HDD Managed Disks for Operating System Disks and Data Disks, we guarantee you will have Virtual Machine Connectivity of at least 95%.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/virtual-machines/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "> [Virtual machine resilliency checklist](https://docs.microsoft.com/en-us/azure/architecture/checklist/resiliency-per-service#virtual-machines)\r\n* Avoid running a production workload on a single VM. A single VM deployment is not resilient to planned or unplanned maintenance. Instead, put multiple VMs in an availability set or virtual machine scale set, with a load balancer in front.\r\n* Specify an availability set when you provision the VM. Currently, there is no way to add a VM to an availability set after the VM is provisioned. When you add a new VM to an existing availability set, make sure to create a NIC for the VM, and add the NIC to the back-end address pool on the load balancer. Otherwise, the load balancer won't route network traffic to that VM.\r\n* Put each application tier into a separate Availability Set. In an N-tier application, don't put VMs from different tiers into the same availability set. VMs in an availability set are placed across fault domains (FDs) and update domains (UD). However, to get the redundancy benefit of FDs and UDs, every VM in the availability set must be able to handle the same client requests.\r\n* Replicate VMs using Azure Site Recovery. When you replicate Azure VMs using Site Recovery, all the VM disks are continuously replicated to the target region asynchronously. The recovery points are created every few minutes. This gives you a Recovery Point Objective (RPO) in the order of minutes. You can conduct disaster recovery drills as many times as you want, without affecting the production application or the ongoing replication.\r\n* Choose the right VM size based on performance requirements. When moving an existing workload to Azure, start with the VM size that's the closest match to your on-premises servers. Then measure the performance of your actual workload with respect to CPU, memory, and disk IOPS, and adjust the size if needed. This helps to ensure the application behaves as expected in a cloud environment. Also, if you need multiple NICs, be aware of the NIC limit for each size.\r\n* Use managed disks for VHDs. Managed disks provide better reliability for VMs in an availability set, because the disks are sufficiently isolated from each other to avoid single points of failure. Also, managed disks aren't subject to the IOPS limits of VHDs created in a storage account.\r\n* Install applications on a data disk, not the OS disk. Otherwise, you may reach the disk size limit.\r\n* Use Azure Backup to back up VMs. Backups protect against accidental data loss.\r\n* Enable diagnostic logs. Include basic health metrics, infrastructure logs, and boot diagnostics. Boot diagnostics can help you diagnose a boot failure if your VM gets into a nonbootable state.\r\n* Configure Azure Monitor. Collect and analyze monitoring data from Azure virtual machines including the guest operating system and the workloads that run in it.\r\n\r\n* Azure Security Center with Azure Defender is required for VM backup information.\r\n* VMs have to be running for disk information to be available.\r\n* VM SLAs apply to both operating system and data disks - only operating system disks are represented in this workbook.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.compute/virtualMachines' and tags.creationSource !contains \"aks\"\r\n| extend cAvailabilityZone = coalesce(tostring(zones[0]), '0')\r\n| extend cAvailabilitySet = coalesce(extract('/availabilitySets/(.*)', 1, tostring(properties.availabilitySet.id)), '-')\r\n| extend OSDisk_Type = properties.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend AvailabilityZone = case(cAvailabilityZone == 0, \"Warning\", \r\n                       cAvailabilityZone == 1, \"Configured\", \r\n                       \"Unknown\")\r\n| extend AvailabilitySet = case(cAvailabilitySet == '-', \"Warning\", \r\n                       cAvailabilitySet <> \"-\", \"Configured\", \r\n                       \"Unknown\")\r\n| extend OSDisk_UltraorPremium= case(OSDisk_Type startswith \"Standard\", \"Warning\",\r\n                       OSDisk_Type startswith \"Ultra\", \"Configured\",\r\n\t\t\t\t\t   OSDisk_Type startswith \"Premium\", \"Configured\", \r\n                       \"Unknown\")\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = tolower(tostring(id)), Name = name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, State = tostring(properties.extended.instanceView.powerState.displayStatus), Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment\r\n| join kind = leftouter (\r\nresources\r\n| where type =~ 'microsoft.compute/virtualMachines'\r\n| project ResourceId = tolower(tostring(id))\r\n| join kind = leftouter (\r\nsecurityresources\r\n| where properties.displayName contains \"Azure Backup should\"\r\n| extend BackupKnown = case((properties.status.code) == \"Unhealthy\", \"Warning\", \r\n\t\t\t\t  (properties.status.code) == \"Healthy\", \"Configured\",\r\n\t\t\t\t  \"Unknown\")\r\n| project ResourceId = tolower(tostring(properties.resourceDetails.Id)), BackupKnown\r\n) on ResourceId\r\n| extend Backup = case(BackupKnown == \"Warning\", \"Warning\", \r\n\t\t\t\t  BackupKnown == \"Configured\", \"Configured\",\r\n\t\t\t\t  \"Unknown\") \r\n| project ResourceId, Backup\r\n) on ResourceId\r\n| project ResourceId, Name, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, State, Location, ResourceGroup, SubscriptionId, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project Name, State, Location, ResourceGroup, AvailabilityZone, AvailabilitySet, OSDisk_UltraorPremium, OSDisk_Type, Backup, SubscriptionId, SubscriptionName, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "Virtual Machines",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "VM running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "VM deallocated",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvailabilityZone",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unknown",
                                "representation": "unknown",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvailabilitySet",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unknown",
                                "representation": "unknown",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDisk_UltraorPremium",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDisk_Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Backup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "State",
                          "label": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "AvailabilityZone",
                          "label": "Availability Zone"
                        },
                        {
                          "columnId": "AvailabilitySet",
                          "label": "Availability Set"
                        },
                        {
                          "columnId": "OSDisk_UltraorPremium",
                          "label": "OSDisk [Ultra | Premium]"
                        },
                        {
                          "columnId": "OSDisk_Type",
                          "label": "OSDisk Type"
                        },
                        {
                          "columnId": "Backup"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "VM"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "cVM"
            },
            "name": "cVMsGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Virtual Machine Scale Sets](https://azure.microsoft.com/en-us/support/legal/sla/virtual-machine-scale-sets/v1_1/)\r\n* Virtual Machine Scale Sets is a free service, therefore, it does not have a financially backed SLA itself. However, if the Virtual Machine Scale Sets includes Virtual Machines in at least 2 Fault Domains, the availability of the underlying Virtual Machines SLA for two or more instances applies.\r\n* If the scale set contains a single Virtual Machine, the availability for a Single Instance Virtual Machine applies. See the [Virtual Machines SLA](https://azure.microsoft.com/en-us/support/legal/sla/virtual-machines/v1_9/) for more details.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/virtual-machine-scale-sets/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "[Virtual machine scale set resiliency checklist](https://docs.microsoft.com/en-us/azure/architecture/checklist/resiliency-per-service#virtual-machines)\r\n\r\n* Avoid running a production workload on a single VM in a Scale set. A single VM deployment is not resilient to planned or unplanned maintenance. Instead, put multiple VMs in a virtual machine scale set, with a load balancer in front.\r\n* Put each application tier into a separate Scale Set. In an N-tier application, don't put VMs from different tiers into the same scale set. \r\n* Make sure to select multiple fault domains for the scale set to achieve resiliency during failures.\r\n* Always enable Zone redundancy for VMs in scale sets whenever the region support zone redundancy\r\n* Enable Overprovision settings to create multiple VMs during scaling and remove failure VMs. This increases chances of successful provision during scaling event.\r\n* Choose the right VM size based on performance requirements. When moving an existing workload to Azure, start with the VM size that's the closest match to your on-premises servers. Then measure the performance of your actual workload with respect to CPU, memory, and disk IOPS, and adjust the size if needed. This helps to ensure the application behaves as expected in a cloud environment. Also, if you need multiple NICs, be aware of the NIC limit for each size.\r\n* Use managed disks for VHDs. Managed disks provide better reliability for VMs in an availability set, because the disks are sufficiently isolated from each other to avoid single points of failure. Also, managed disks aren't subject to the IOPS limits of VHDs created in a storage account.\r\n* Configure Azure Monitor. Collect and analyze monitoring data from Azure virtual machines including the guest operating system and the workloads that run in it.\r\n* VMs have to be running for disk information to be available.\r\n* VM SLAs apply to both operating system and data disks - only operating system disks are represented in this workbook.\r\n* Capacity specifies the number of virtual machines in the scale set.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type == \"microsoft.compute/virtualmachinescalesets\"\r\n| where tags.orchestrator !contains \"Kubernetes\"\r\n| extend SkuName = tostring(sku.name)\r\n| extend Tier = tostring(sku.tier)\r\n| extend Capacity = sku.capacity\r\n| extend cCapacity = case(sku.capacity > 1, \"Configured\", \"Warning\")\r\n| extend FaultDomainCount = properties.platformFaultDomainCount\r\n| extend cFaultDomainCount = case(properties.platformFaultDomainCount >= 2, \"Configured\", \"Warning\")\r\n| extend ManagedDiskType = properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType\r\n| extend singlePlacementGroup = properties.singlePlacementGroup\r\n| extend overprovision = case(properties.overprovision == 1, \"Enabled\", \"Not Enabled\")\r\n| extend ZonesCount = array_length(parse_json(zones))\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision = overprovision, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, ZonesCount, SkuName, Tier, Capacity, cCapacity, FaultDomainCount, cFaultDomainCount, ManagedDiskType, Overprovision, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "Virtual Machine Scale Sets",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Zones",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ZonesCount",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Capacity",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "<=",
                                "thresholdValue": "1",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "1",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "cCapacity",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FaultDomainCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">=",
                                "thresholdValue": "2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "<",
                                "thresholdValue": "2",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "cFaultDomainCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ManagedDiskType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Premium",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Standard",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Overprovision",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Not Enabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvailabilityZone",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unknown",
                                "representation": "unknown",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "VM running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "VM deallocated",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AvailabilitySet",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Unknown",
                                "representation": "unknown",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDisk_UltraorPremium",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "OSDisk_Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Backup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Zones"
                        },
                        {
                          "columnId": "ZonesCount",
                          "label": "Zones Count"
                        },
                        {
                          "columnId": "SkuName"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "Capacity"
                        },
                        {
                          "columnId": "cCapacity"
                        },
                        {
                          "columnId": "FaultDomainCount",
                          "label": "Fault Domains"
                        },
                        {
                          "columnId": "cFaultDomainCount",
                          "label": "Fault Domain State"
                        },
                        {
                          "columnId": "ManagedDiskType",
                          "label": "Managed Disk Type"
                        },
                        {
                          "columnId": "Overprovision"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "VMSS - Copy"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "cVMSS"
            },
            "name": "cVMSSGroup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for App Service](https://azure.microsoft.com/en-us/support/legal/sla/app-service/v1_4/)\r\n* We guarantee that Apps running in a customer subscription will be available 99.95% of the time. \r\n* No SLA is provided for Apps under either the Free or Shared tiers.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/app-service/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2 - Copy - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* This section lists Function Apps running on an App Service Plan.\r\n* Filter using the subscriptions parameter as required.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\nsku == 'free',\r\n'Free',\r\nsku == 'shared',\r\n'Shared',\r\nsku == 'dynamic',\r\n'Dynamic',\r\nsku == 'isolated',\r\n'Isolated',\r\nsku == 'premiumv2',\r\n'Premium V2',\r\nsku == 'premium',\r\n'Premium',\r\nsku == 'basic',\r\n'Basic',\r\nsku == 'elasticpremium',\r\n'Elastic Premium',\r\nsku == 'premiumv3',\r\n'Premium V3',\r\n'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\nstate == 'stopped',\r\n'Stopped',\r\nstate == 'running',\r\n'Running',\r\n'Other')\r\n| extend appType = case(\r\nkind contains 'botapp',\r\n'Bot Service',\r\nkind contains 'api',\r\n'Api App',\r\nkind contains 'functionapp' and kind !contains 'workflowapp',\r\n'Function App',\r\nkind contains 'functionapp' and kind contains 'workflowapp',\r\n'Logic App (Preview)',\r\n'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name,Status = status,Tier = pricingTier,AppServicePlanId = appServicePlanId,AppType = appType,ResourceId = id,Type = type,Kind = kind,Location = location,SubscriptionId = subscriptionId,ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Function App\"",
                    "size": 3,
                    "title": "App Service - Function App",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Running",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Stopped",
                                "representation": "gray",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Free",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Shared",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AppType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Kind",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "AppType"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Kind"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "AppServicePlanId",
                          "label": "App Service Plan Id"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "AppServiceFunction"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "cASFA"
            },
            "name": "cASFAGroup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Compute"
      },
      "name": "Compute"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "b63203d3-451f-45a0-9d22-ff01dabcf4e5",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "1f01a11d-36a7-4416-a0b3-69ea034ee5db",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "707f63c2-d1b1-41dd-afb7-93f0fced8161",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment\r\n\r\n",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "c86b103b-a7d2-4d35-8598-a65902a7514f",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "d9dc8d17-6b0b-4b4e-8ad9-db9953f2df9f",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "91622323-6ce2-4c1b-a489-3a13c3adf001",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "01f0cca4-531d-40e1-ab7f-c04ee0440e5b",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure SQL Database",
                  "subTarget": "AzSQL",
                  "style": "link"
                },
                {
                  "id": "0df521d5-8d1b-44f0-ba5e-c133d89deb09",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Azure Synapse Analytics",
                  "subTarget": "AzSynapse",
                  "style": "link"
                },
                {
                  "id": "14da2544-7eb4-418c-9ce3-082cf39e4b81",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Cosmos DB",
                  "subTarget": "Cosmos",
                  "style": "link"
                },
                {
                  "id": "15e4ed4e-8927-482e-a09a-c70d1ef43b32",
                  "cellValue": "selectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "MySQL",
                  "subTarget": "MySQL",
                  "style": "link"
                }
              ]
            },
            "name": "links - 7"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure SQL Database](https://azure.microsoft.com/en-us/support/legal/sla/sql-database/v1_5/)\r\n* Azure SQL Database Business Critical or Premium tiers configured as Zone Redundant Deployments have an availability guarantee of at least 99.995%.\r\n* Azure SQL Database Business Critical or Premium tiers not configured for Zone Redundant Deployments, General Purpose, Standard, or Basic tiers, or Hyperscale tier with two or more replicas have an availability guarantee of at least 99.99%.\r\n* Azure SQL Database Hyperscale tier with one replica has an availability guarantee of at least 99.95% and 99.9% for zero replicas.\r\n* Azure SQL Database Business Critical tier configured with geo-replication has a guarantee of Recovery point objective (RPO) of 5 sec for 100% of deployed hours.\r\n* Azure SQL Database Business Critical tier configured with geo-replication has a guarantee of Recovery time objective (RTO) of 30 sec for 100% of deployed hours.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/sql-database/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2 - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* Standard and Premium tiers provide a longer point-in-time restore period (35 days).\r\n* Enable SQL Database auditing. Auditing can be used to diagnose malicious attacks or human error.\r\n* Use Active Geo-Replication to create a readable secondary in a different region. If your primary database fails, or simply needs to be taken offline, perform a manual failover to the secondary database. Until you fail over, the secondary database remains read-only.\r\n* Consider using sharding to partition the database horizontally. Sharding can provide fault isolation.\r\n* Use point-in-time restore to recover from human error.\r\n* Use geo-restore to recover from a service outage. Geo-restore restores a database from a geo-redundant backup.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier <> \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB / 1000 / 1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "Azure SQL Database",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Online",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "gray",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Premium",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "BusinessCritical",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "DataWarehouse",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "2",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "GRS",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Endpoint",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "maxSizeGB",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "DefaultSecondaryLocation",
                          "label": "Secondary Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "StorageAccountType",
                          "label": "Storage Account Type"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "Read Replica Count"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "maxSizeGB",
                          "label": "Max Size"
                        },
                        {
                          "columnId": "Details"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "AzureSQL"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "AzSQL"
            },
            "name": "AzSQL"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure Synapse Analytics (formerly Azure SQL Data Warehouse)](https://azure.microsoft.com/en-us/support/legal/sla/synapse-analytics/v1_0/)\r\n* We guarantee that, at least 99.9% of the time client operations executed on a Synapse Analytics database will succeed.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/synapse-analytics/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 2 - Copy - Copy"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* It is recommended to keep the geo-backup feature enabled. By default, Synapse Analytics takes a full backup of your data every 24 hours for disaster recovery.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 3 - Copy - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where type =~ 'microsoft.sql/servers/databases'\r\n| extend Tier = sku.tier\r\n| where Tier == \"DataWarehouse\"\r\n| extend StorageAccountType = properties.storageAccountType\r\n| extend DefaultSecondaryLocation = properties.defaultSecondaryLocation\r\n| extend ReadReplicaCount = properties.readReplicaCount\r\n| extend ZoneRedundant = properties.zoneRedundant\r\n| extend Status = properties.status\r\n| extend Endpoint = properties.fullyQualifiedDomainName\r\n| extend maxSizeGB = todouble(properties.maxSizeBytes)\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB /1000 /1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier, StorageAccountType, DefaultSecondaryLocation, ReadReplicaCount, ZoneRedundant, Status, Endpoint, maxSizeGB, Details, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, tostring(DefaultSecondaryLocation), ResourceGroup, Type, Tier, StorageAccountType, ReadReplicaCount, ZoneRedundant, Endpoint, maxSizeGB, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "Azure Synapse Analytics",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Online",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "gray",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Premium",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "BusinessCritical",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "DataWarehouse",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "2",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAccountType",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "GRS",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Endpoint",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "maxSizeGB",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 5,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "DefaultSecondaryLocation",
                          "label": "Secondary Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "StorageAccountType",
                          "label": "Storage Account Type"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "Read Replica Count"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "maxSizeGB",
                          "label": "Max Size"
                        },
                        {
                          "columnId": "Details"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "Synapse"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "AzSynapse"
            },
            "name": "AzSynapse"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure Cosmos DB](https://azure.microsoft.com/en-us/support/legal/sla/cosmos-db/v1_3/)\r\n* The service offers comprehensive 99.99% SLAs which covers the guarantees for throughput, consistency, availability and latency for the Azure Cosmos DB Database Accounts scoped to a single Azure region configured with any of the five Consistency Levels or Database Accounts spanning multiple Azure regions, configured with any of the four relaxed Consistency Levels\r\n* Azure Cosmos DB allows configuring multiple Azure regions as writable endpoints for a Database Account. In this configuration, Azure Cosmos DB offers 99.999% SLA for both read and write availability\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/cosmos-db/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* It is recommended to replicate the database across regions.\r\n* Leverage Availability Zones whenever the region supports Availability Zones. Availability Zone region support for Cosmos DB can be found [here](https://docs.microsoft.com/en-us/azure/availability-zones/az-region)\r\n* To ensure high write and read availability, configure your Azure Cosmos account to span at least two regions with multiple-write regions. This configuration will provide the highest availability, lowest latency, and best scalability for both reads and writes backed by SLAs.\r\n* For multi-region Azure Cosmos accounts that are configured with a single-write region, [enable automatic-failover by using Azure CLI or Azure portal](https://docs.microsoft.com/en-us/azure/cosmos-db/how-to-manage-database-account#automatic-failover). After you enable automatic failover, whenever there is a regional disaster, Cosmos DB will automatically failover your account.",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n| extend PublicNetworkAccess = properties.publicNetworkAccess\r\n| extend ZoneRedundant = properties.locations[0].isZoneRedundant\r\n| extend ZoneRedundantRecommend = case(\r\n\t(location in (\"centralus\", \"eastus\", \"eastus2\", \"westus2\", \"canadacentral\", \"francecentral\", \"northeurope\", \"uksouth\", \"westeurope\", \"japaneast\", \"southeastasia\", \"australiaeast\")) and (ZoneRedundant == \"false\"), \"Not Configured\",\r\n\tZoneRedundant == \"true\", \"Configured\",\r\n\t\"NA\")\r\n| extend ZoneRedundant = ZoneRedundantRecommend\r\n| extend ReadReplicaCount = array_length(parse_json(properties.readLocations))\r\n| extend VnetFilterEnabled = properties.isVirtualNetworkFilterEnabled\r\n| extend DatabaseAccountOfferType = properties.databaseAccountOfferType\r\n| extend AutomaticFailover = case((properties.enableAutomaticFailover == \"false\") \r\nand (properties.enableMultipleWriteLocations == \"false\") and (ReadReplicaCount > 1) ,\"Not Configured\", case(properties.enableAutomaticFailover == \"true\", \"Configured\", \"NA\"))\r\n| extend MultipleWriteLocations = case(properties.enableMultipleWriteLocations == \"false\", \"Not Enabled\", case(properties.enableMultipleWriteLocations == \"true\", \"Enabled\", \"Undefined\"))\r\n| extend ConsistencyPolicy = properties.consistencyPolicy.defaultConsistencyLevel\r\n| extend EnabledApi = properties.EnabledApiTypes\r\n| extend Endpoint = properties.documentEndpoint\r\n| extend EnabledFreeTier = properties.enableFreeTier\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, FreeTier = EnabledFreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment\r\n| join kind = leftouter (\r\nresourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId\r\n) on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Location, ResourceGroup, Type, FreeTier, ReadReplicaCount, ZoneRedundant, Endpoint, PublicNetworkAccess, VnetFilterEnabled, MultipleWriteLocations, DatabaseAccountOfferType, AutomaticFailover, ConsistencyPolicy, EnabledApi, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "Cosmos DB",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "FreeTier",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ReadReplicaCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "<",
                                "thresholdValue": "2",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": ">=",
                                "thresholdValue": "2",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ZoneRedundant",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Not Configured",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "NA",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Endpoint",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "PublicNetworkAccess",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "VnetFilterEnabled",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "MultipleWriteLocations",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Not Enabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "DatabaseAccountOfferType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "AutomaticFailover",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Not Configured",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "NA",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "FreeTier"
                        },
                        {
                          "columnId": "ReadReplicaCount",
                          "label": "Read Replica Count"
                        },
                        {
                          "columnId": "ZoneRedundant",
                          "label": "Zone Redundant"
                        },
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "PublicNetworkAccess",
                          "label": "Public Network Access"
                        },
                        {
                          "columnId": "VnetFilterEnabled",
                          "label": "Vnet Filter Enabled"
                        },
                        {
                          "columnId": "MultipleWriteLocations",
                          "label": "Multiple Write Locations"
                        },
                        {
                          "columnId": "DatabaseAccountOfferType",
                          "label": "Database Account Offer Type"
                        },
                        {
                          "columnId": "AutomaticFailover",
                          "label": "Automatic Failover"
                        },
                        {
                          "columnId": "ConsistencyPolicy",
                          "label": "Consistency Policy"
                        },
                        {
                          "columnId": "EnabledApi",
                          "label": "Enabled Api"
                        },
                        {
                          "columnId": "Details"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "query - 2"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Cosmos"
            },
            "name": "Cosmos"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "[SLA for Azure Database for MySQL server](https://azure.microsoft.com/en-us/support/legal/sla/mysql/v1_1/)\r\n* Single Server: We guarantee at least 99.99% of the time customers will have connectivity between their Microsoft Azure Database for MySQL Server and our Internet gateway\r\n* Flexible Server: No SLA applicable during preview\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/mysql/)",
                    "style": "upsell"
                  },
                  "conditionalVisibility": {
                    "parameterName": "SLA",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 0"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "* It is recommended to create cross region read replicas in another region\r\n* Enable Availability Zone in Flexible server if the region supports Availability Zones\r\n* Enable backup storage redundancy as GRS instead of LRS\r\n* Validate and configure backup retention period\r\n",
                    "style": "info"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Help",
                    "comparison": "isEqualTo",
                    "value": "Yes"
                  },
                  "name": "text - 1"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/servers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend sku_family = sku.family\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend backup_georedundant = properties.storageProfile.geoRedundantBackup\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend infrastructureEncryption = properties.infrastructureEncryption\r\n| extend minimalTlsVersion = properties.minimalTlsVersion\r\n| extend userVisibleState = properties.userVisibleState\r\n| extend replicationRole = properties.replicationRole\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\") \r\n| project Name = name, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, SkuFamily = sku_family, GeoRedundantBackup = backup_georedundant, StorageAutogrow = storage_autogrow, InfrastructureEncryption = infrastructureEncryption, Status = userVisibleState, Endpoint = fullyQualifiedDomainName, TlsEnforcement = minimalTlsVersion, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Status, Location, ResourceGroup, Type, Tier, SkuName, SkuFamily, GeoRedundantBackup, StorageAutogrow, InfrastructureEncryption, TlsEnforcement, SslEnforcement, ReplicationRole, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "MySQL - Single",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Ready",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Basic",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "GeneralPurpose",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "MemoryOptimized",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SkuFamily",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Gen5",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "Gen5",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "InfrastructureEncryption",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "TlsEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "ReplicationRole",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "None",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Master",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Replica",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Endpoint",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Sku Name"
                        },
                        {
                          "columnId": "SkuFamily",
                          "label": "Sku Family"
                        },
                        {
                          "columnId": "GeoRedundantBackup",
                          "label": "Geo Redundant Backup"
                        },
                        {
                          "columnId": "StorageAutogrow",
                          "label": "Storage Autogrow"
                        },
                        {
                          "columnId": "InfrastructureEncryption",
                          "label": "Infrastructure Encryption"
                        },
                        {
                          "columnId": "TlsEnforcement",
                          "label": "TLS Enforcement"
                        },
                        {
                          "columnId": "SslEnforcement",
                          "label": "SSL Enforcement"
                        },
                        {
                          "columnId": "ReplicationRole",
                          "label": "Replication Role"
                        },
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "Details"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type like 'microsoft.dbformysql/flexibleservers' \r\n| extend sku_name = sku.name\r\n| extend sku_tier = sku.tier \r\n| extend sku_capacity = sku.capacity\r\n| extend backup_retention = properties.storageProfile.backupRetentionDays\r\n| extend storage_autogrow = properties.storageProfile.storageAutogrow\r\n| extend fullyQualifiedDomainName = properties.fullyQualifiedDomainName\r\n| extend publicNetworkAccess = properties.publicNetworkAccess\r\n| extend State = tostring(properties.state)\r\n| extend replicationRole = tostring(properties.replicationRole)\r\n| extend replicaCapacity = properties.replicaCapacity\r\n| extend sslEnforcement = properties.sslEnforcement\r\n| extend masterServerId = properties.masterServerId\r\n| extend HaState = properties.haState\r\n| extend HaEnabled = properties.haEnabled\r\n| extend ReplicationConfiguration = case((replicationRole == \"None\" and HaEnabled == \"Disabled\"), \"Not Configured\", case(replicationRole == \"None\", \"NA\", \"Configured\"))\r\n| extend Details = pack_all()\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality, \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project Name = name, State, ResourceId = id, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Type = type, Tier=sku_tier, SkuName = sku_name, StorageAutogrow = storage_autogrow, Endpoint = fullyQualifiedDomainName, SslEnforcement = sslEnforcement, ReplicationRole = replicationRole, HaState, HaEnabled, ReplicationConfiguration, Details, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend subscriptionName = name\r\n    | distinct subscriptionName, subscriptionId\r\n    | project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, State, Location, ResourceGroup, Type, Tier, SkuName, StorageAutogrow, SslEnforcement, ReplicationRole, HaState, HaEnabled, ReplicationConfiguration, Endpoint, Details, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
                    "size": 3,
                    "title": "MySQL - Flexible",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscriptions}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SubscriptionName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "SubscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Ready",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Tier",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Basic",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "GeneralPurpose",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "MemoryOptimized",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuName",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "StorageAutogrow",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SslEnforcement",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaState",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Healthy",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "Healthy",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "HaEnabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ReplicationConfiguration",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Not Configured",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Configured",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "NA",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Endpoint",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Criticality",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Mission Critical",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Prod",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Ready",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "SkuFamily",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Gen5",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "!=",
                                "thresholdValue": "Gen5",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "GeoRedundantBackup",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "InfrastructureEncryption",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Enabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Disabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "TlsEnforcement",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "TLSEnforcementDisabled",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "TLSEnforcementEnabled",
                                "representation": "success",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "SubscriptionName"
                        ],
                        "expandTopLevel": false,
                        "finalBy": "Name"
                      },
                      "labelSettings": [
                        {
                          "columnId": "SubscriptionName",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "SubscriptionId"
                        },
                        {
                          "columnId": "Name"
                        },
                        {
                          "columnId": "State",
                          "label": "Status"
                        },
                        {
                          "columnId": "Location"
                        },
                        {
                          "columnId": "ResourceGroup",
                          "label": "Resource Group"
                        },
                        {
                          "columnId": "Type"
                        },
                        {
                          "columnId": "Tier"
                        },
                        {
                          "columnId": "SkuName",
                          "label": "Sku Name"
                        },
                        {
                          "columnId": "StorageAutogrow",
                          "label": "Storage Autogrow"
                        },
                        {
                          "columnId": "SslEnforcement",
                          "label": "SSL Enforcement"
                        },
                        {
                          "columnId": "ReplicationRole",
                          "label": "Replication Role"
                        },
                        {
                          "columnId": "HaState",
                          "label": "HA State"
                        },
                        {
                          "columnId": "HaEnabled",
                          "label": "HA Enabled"
                        },
                        {
                          "columnId": "ReplicationConfiguration",
                          "label": "Replication Configuration"
                        },
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "Details"
                        },
                        {
                          "columnId": "Criticality"
                        },
                        {
                          "columnId": "Environment"
                        },
                        {
                          "columnId": "ResourceId"
                        }
                      ]
                    }
                  },
                  "name": "query - 2 - Copy"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "MySQL"
            },
            "name": "MySQL"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Databases"
      },
      "name": "Databases"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "60168909-7ce4-46d4-86eb-df56b6f7a949",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "6add51aa-df9a-450e-8e9d-95b2d25867ae",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "b56dea6c-4ede-4e15-9a11-aa4e9246470c",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "8601378c-0c53-4452-a26e-5936cf27d2d9",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "e63069af-5126-43a5-8ec4-b07935d3cded",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "2154212d-f81c-4b8e-931a-bf7d82215046",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "ContainersParam"
          },
          {
            "type": 1,
            "content": {
              "json": "[SLA for Azure Kubernetes Service (AKS)](https://azure.microsoft.com/en-us/support/legal/sla/kubernetes-service/v1_1/)\r\n* For customers who have purchased an Azure Kubernetes Service (AKS) Uptime SLA, we guarantee uptime of 99.95% for the Kubernetes API Server for AKS Clusters that use Azure Availability Zone and 99.9% for AKS Clusters that do not use Azure Availability Zone.\r\n* The availability of the agent nodes in your AKS Cluster is covered by the Virtual Machines SLA. Please see the [Virtual Machines SLA](https://azure.microsoft.com/support/legal/sla/virtual-machines/) for more details.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/kubernetes-service/)",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SLA",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": "* An Azure Kubernetes Service (AKS) cluster distributes resources such as nodes and storage across logical sections of underlying Azure infrastructure. This deployment model when using availability zones, ensures nodes in a given availability zone are physically separated from those defined in another availability zone. AKS clusters deployed with multiple availability zones configured across a cluster provide a higher level of availability to protect against a hardware failure or a planned maintenance event.\r\n* By defining node pools in a cluster to span multiple zones, nodes in a given node pool are able to continue operating even if a single zone has gone down. Your applications can continue to be available even if there is a physical failure in a single datacenter if orchestrated to tolerate failure of a subset of nodes.\r\n* You can only define availability zones when the cluster or node pool is created.\r\nAvailability zone settings can't be updated after the cluster is created. You also can't update an existing, non-availability zone cluster to use availability zones.\r\n* The chosen node size (VM SKU) selected must be available across all availability zones selected.\r\n* Clusters with availability zones enabled require use of Azure Standard Load Balancers for distribution across zones. This load balancer type can only be defined at cluster create time.\r\n* Clusters with Availability Sets are recommended to move to VM Scale Sets for node pools. Availability Sets limits the management of nodepool capability such as upgrading Kubernetes versions for individual node pools and adding or removing node pools. Re-creation of cluster is required to move from Availability sets to scale sets.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Help"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.containerservice/managedclusters\"\r\n| extend aksname = tostring(name)\r\n| join kind = leftouter (\r\n\tresources \r\n\t| where type == \"microsoft.compute/virtualmachinescalesets\" and tags.orchestrator contains \"Kubernetes\" \r\n\t| extend aksname = tostring(split(resourceGroup, \"_\")[2]) \r\n\t| extend AvZones = coalesce(tostring(array_length(parse_json(zones))), '0'), AvSets = \"Scale Sets\"\r\n) on aksname\r\n| extend avSets = case(\r\n\tAvSets == \"Scale Sets\", \"A regional (non-zonal) scale set uses placement groups, which act as an implicit availability set with five fault domains and five update domains.\",\r\n\t\"Scale Sets Not Configured\"\r\n)\r\n| extend avZones = case(\r\n\tAvZones <> \"\", AvZones,\r\n\t\"Undefined\"\r\n)\r\n| extend capacity = sku1.capacity\r\n| extend osDisk = case(\r\n\tproperties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType <> \"\", properties1.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType,\r\n\t\"Undefined\"\r\n)\r\n| extend loadBalancerSku = properties.networkProfile.loadBalancerSku\r\n| extend faultDomain = iif(isnotempty(properties1.platformFaultDomainCount), properties1.platformFaultDomainCount, 0)\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n    \"Undefined\")\r\n| extend Environment = case(\r\n    tags.Environment <> \"\", tags.Environment,\r\n    tags.environment <> \"\", tags.environment,\r\n    tags.Env <> \"\", tags.Env,\r\n    tags.env <> \"\", tags.env,\r\n    name contains \"prod\", \"Production\",\r\n    name contains \"dev\", \"Development\",\r\n    name contains \"qa\", \"QA\",\r\n    name contains \"uat\", \"UAT\",\r\n    name contains \"sit\", \"SIT\",\r\n    name contains \"test\", \"Test\",\r\n    \"Undefined\")\r\n| project ResourceId = id, Name = name, Type = type, Location = location, ResourceGroup = resourceGroup, SubscriptionId = subscriptionId, Zones = tostring(zones), SkuName = properties.agentPoolProfiles[0].vmSize, Plan = plan, Identity = identity, State = properties.provisioningState, AvZones = avZones, AvSets = avSets,  Capacity = capacity, FaultDomain = faultDomain, ManagedDiskType = osDisk, LoadBalancerSku = loadBalancerSku, Criticality, Environment\r\n| join kind = leftouter (\r\n    resourcecontainers\r\n    | where type == 'microsoft.resources/subscriptions'\r\n    | extend SubscriptionName = name\r\n    | distinct SubscriptionName, subscriptionId\r\n    | project SubscriptionName, SubscriptionId = subscriptionId)\r\n    on SubscriptionId\r\n| project SubscriptionName, SubscriptionId, Name, Type, Location, ResourceGroup, Zones, SkuName, Plan, State, AvZones, AvSets, Capacity, FaultDomain, ManagedDiskType, LoadBalancerSku, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
              "size": 0,
              "title": "Azure Kubernetes Service (AKS)",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SubscriptionName",
                    "formatter": 5,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Zones",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Plan",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AvZones",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "3",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "0",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Undefined",
                          "representation": "unknown",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AvSets",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Scale Sets Not Configured",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "A regional (non-zonal) scale set uses placement groups",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Capacity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">=",
                          "thresholdValue": "3",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "<=",
                          "thresholdValue": "2",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "Undefined"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "FaultDomain",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ManagedDiskType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "Premium",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Standard",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "LoadBalancerSku",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Basic",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Standard",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Criticality",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Mission Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Environment",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "gray",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AvailabilityZones",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "is Empty",
                          "representation": "2",
                          "text": "Warning"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "Configured"
                        }
                      ]
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionName"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "Name"
                }
              }
            },
            "name": "AKS"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Containers"
      },
      "name": "Containers"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "d2db1bc8-6a24-4222-8553-a5651dd88e27",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "d55bef3f-b2f7-4b63-803e-5d169cb1d2a2",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "837b9076-1743-4490-aa84-ee8026be1e1a",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "e2e92ba1-e3be-4887-9b4a-3919643fbea0",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "e396ce5d-22f2-4e08-9079-d3732ff0ff62",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "8b2b1f5e-f40b-4a13-b189-c02a4a8f55a6",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "[SLA for Storage Accounts](https://azure.microsoft.com/en-us/support/legal/sla/storage/v1_5/)\r\n* We guarantee that at least 99.99% (99.9% for Cool Access Tier) of the time, we will successfully process requests to read data from Read Access-Geo Redundant Storage (RA-GRS) Accounts, provided that failed attempts to read data from the primary region are retried on the secondary region.\r\n* We guarantee that at least 99.9% (99% for Cool Access Tier) of the time, we will successfully process requests to read data from Locally Redundant Storage (LRS), Zone Redundant Storage (ZRS), and Geo Redundant Storage (GRS) Accounts.\r\n* We guarantee that at least 99.9% (99% for Cool Access Tier) of the time, we will successfully process requests to write data to Locally Redundant Storage (LRS), Zone Redundant Storage (ZRS), and Geo Redundant Storage (GRS) Accounts and Read Access-Geo Redundant Storage (RA-GRS) Accounts.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/storage/)",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SLA",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 2 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "> * For application data, use read-access geo-redundant storage (RA-GRS). RA-GRS storage replicates the data to a secondary region, and provides read-only access from the secondary region. If there is a storage outage in the primary region, the application can read the data from the secondary region.\r\n* For VM disks, use managed disks. Managed disks provide better reliability for VMs in an availability set, because the disks are sufficiently isolated from each other to avoid single points of failure. Also, managed disks aren't subject to the IOPS limits of VHDs created in a storage account.\r\n* For Queue storage, create a backup queue in another region. For Queue storage, a read-only replica has limited use, because you can't queue or dequeue items. Instead, create a backup queue in a storage account in another region. If there is a storage outage, the application can use the backup queue, until the primary region becomes available again. That way, the application can still process new requests",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 3 - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type =~ \"microsoft.storage/storageaccounts\" or type =~ \"microsoft.classicstorage/storageaccounts\"\r\n| extend isStorageV2 = iff(type =~ \"microsoft.storage/storageaccounts\", true, false)\r\n| extend SkuName = replace('-', '_', tostring(iff(isStorageV2, sku.name, properties.accountType)))\r\n| extend replicationCode = split(SkuName, '_', 1)[0]\r\n| extend ReplicationType = case(replicationCode =~ \"lrs\", 'Locally-redundant storage (LRS)', \r\n                                replicationCode =~ \"zrs\", 'Zone-redundant storage (ZRS)',\r\n                                replicationCode =~ \"grs\", 'Geo-redundant storage (GRS)',\r\n                                replicationCode =~ \"ragrs\", 'Read-access geo-redundant storage (RA-GRS)',\r\n                                replicationCode =~ \"gzrs\", 'Geo-zone-redundant storage (GZRS)',\r\n                                replicationCode =~ \"ragzrs\", 'Read-access geo-zone-redundant storage (RA-GZRS)',\r\n                                coalesce(replicationCode, '-'))\r\n| extend Created = tostring(properties.creationTime)\r\n| extend AccessTier = tostring(iff(isStorageV2, coalesce(properties.accessTier, '-'), '-'))\r\n| extend primaryStatus = iff(isStorageV2, properties.statusOfPrimary, properties.statusOfPrimaryRegion)\r\n| extend PrimaryStatus = case(primaryStatus =~ \"available\", 'Available',\r\n                              primaryStatus =~ \"unavailable\", 'Unavailable',\r\n                              coalesce(primaryStatus, '-'))\r\n| extend secondaryStatus = iff(isStorageV2, properties.statusOfSecondary, properties.statusOfSecondaryRegion)\r\n| extend SecondaryStatus = case(secondaryStatus =~ \"available\", 'Available',\r\n                              secondaryStatus =~ \"unavailable\", 'Unavailable',\r\n                              coalesce(secondaryStatus, '-'))\r\n| extend provisioningState = properties.provisioningState\r\n| extend ProvisioningState = case(provisioningState =~ \"creating\", 'Creating',\r\n                                  provisioningState =~ \"resolvingdns\", 'ResolvingDNS',\r\n                                  provisioningState =~ \"succeeded\", 'Succeeded',\r\n                                  provisioningState =~ \"deleting\", 'Deleting',\r\n                                  coalesce(provisioningState, '-'))\r\n| extend PrimaryLocation = tostring(iff(isStorageV2, properties.primaryLocation, properties.geoPrimaryRegion))\r\n| extend SecondaryLocation = case(isnotempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion)),\r\n\t\t\t\t\t\t\t\t  isempty(tostring(iff(isStorageV2, properties.secondaryLocation, properties.geoSecondaryRegion))), '-',\r\n\t\t\t\t\t\t\t\t   '-')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = id, name, type, location, subscriptionId, resourceGroup, kind, tags, SkuName, ReplicationType, Created, AccessTier, PrimaryLocation, PrimaryStatus, SecondaryLocation, SecondaryStatus, ProvisioningState, Criticality, Environment\r\n| extend typeDisplayName=case(type =~ 'microsoft.storage/storageaccounts','Storage account',type)\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name,ResourceId,typeDisplayName,Kind = kind,ResourceGroup = resourceGroup,Location = location,SubscriptionId = subscriptionId,SecondaryStatus,AccessTier,ReplicationType,SecondaryLocation,SkuName,type,Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project SubscriptionName, Name, Location, ResourceGroup, Kind, typeDisplayName, SubscriptionId, SecondaryLocation, SecondaryStatus, AccessTier, ReplicationType, SkuName, type, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
              "size": 3,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SubscriptionName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SecondaryLocation",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "-",
                          "representation": "2",
                          "text": "Warning"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SecondaryStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Available",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "Warning"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AccessTier",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Hot",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "Warning"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "ReplicationType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "RA-GRS",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "GRS",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "ZRS",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SkuName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Criticality",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Mission Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Environment",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "Prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionName"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "Name"
                },
                "labelSettings": [
                  {
                    "columnId": "SubscriptionName",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "Name"
                  },
                  {
                    "columnId": "Location"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "Kind"
                  },
                  {
                    "columnId": "typeDisplayName",
                    "label": "Type Display Name"
                  },
                  {
                    "columnId": "SubscriptionId"
                  },
                  {
                    "columnId": "SecondaryLocation",
                    "label": "Secondary Location"
                  },
                  {
                    "columnId": "SecondaryStatus",
                    "label": "Secondary Status"
                  },
                  {
                    "columnId": "AccessTier",
                    "label": "Access Tier"
                  },
                  {
                    "columnId": "ReplicationType",
                    "label": "Replication Type"
                  },
                  {
                    "columnId": "SkuName",
                    "label": "Sku Name"
                  },
                  {
                    "columnId": "type"
                  },
                  {
                    "columnId": "Criticality"
                  },
                  {
                    "columnId": "Environment"
                  },
                  {
                    "columnId": "ResourceId"
                  }
                ]
              }
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "Storage"
            },
            "name": "query - 5"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Storage"
      },
      "name": "Storage"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "53c4869e-fe5f-4d92-99ec-fb784580a576",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "24e0a66f-1672-46c0-9ee0-efda089b3272",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "7a1ef434-0364-4d13-b251-8285cc0b52d9",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "830e9027-ea9a-4b21-964b-8ce5561331cb",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "253ea690-4b1f-476d-972f-f3db5588e4e3",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "e42b8b91-3a81-4285-9cb1-833bfad1bac7",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "[SLA for App Service](https://azure.microsoft.com/en-us/support/legal/sla/app-service/v1_4/)\r\n* We guarantee that Apps running in a customer subscription will be available 99.95% of the time. \r\n* No SLA is provided for Apps under either the Free or Shared tiers.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/app-service/)",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SLA",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 2 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "> * Use Standard or Premium tier. These tiers support staging slots and automated backups.\r\n* Avoid scaling up or down. Instead, select a tier and instance size that meet your performance requirements under typical load, and then scale out the instances to handle changes in traffic volume. Scaling up and down may trigger an application restart.\r\n* Store configuration as app settings. Use app settings to hold configuration settings as app settings. Define the settings in your Resource Manager templates, or using PowerShell, so that you can apply them as part of an automated deployment / update process, which is more reliable.\r\n* Create separate App Service plans for production and test. Don't use slots on your production deployment for testing. All apps within the same App Service plan share the same VM instances. If you put production and test deployments in the same plan, it can negatively affect the production deployment. For example, load tests might degrade the live production site. By putting test deployments into a separate plan, you isolate them from the production version.\r\n* Separate web apps from web APIs. If your solution has both a web front end and a web API, consider decomposing them into separate App Service apps. This design makes it easier to decompose the solution by workload. You can run the web app and the API in separate App Service plans, so they can be scaled independently. If you don't need that level of scalability at first, you can deploy the apps into the same plan, and move them into separate plans later, if needed.\r\n* Avoid using the App Service backup feature to back up Azure SQL databases. Instead, use SQL Database automated backups. App Service backup exports the database to a SQL BACPAC file, which costs DTUs.\r\n* Deploy to a staging slot. Create a deployment slot for staging. Deploy application updates to the staging slot, and verify the deployment before swapping it into production. This reduces the chance of a bad update in production. It also ensures that all instances are warmed up before being swapped into production. Many applications have a significant warmup and cold-start time.\r\n* Create a deployment slot to hold the last-known-good (LKG) deployment. When you deploy an update to production, move the previous production deployment into the LKG slot. This makes it easier to roll back a bad deployment. If you discover a problem later, you can quickly revert to the LKG version.\r\n* Enable diagnostics logging, including application logging and web server logging. Logging is important for monitoring and diagnostics.\r\n* Log to blob storage. This makes it easier to collect and analyze the data.\r\n* Create a separate storage account for logs. Don't use the same storage account for logs and application data. This helps to prevent logging from reducing application performance.\r\n* Monitor performance. Use a performance monitoring service such as Application Insights to monitor application performance and behavior under load. Performance monitoring gives you real-time insight into the application. It enables you to diagnose issues and perform root-cause analysis of failures.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 3 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == 'microsoft.web/sites'\r\n| extend appServiceEnvironment = iff(properties.hostingEnvironmentId != 'null', extract('hostingEnvironments/([^/]+)', 1, tostring(properties.hostingEnvironmentId)), '')\r\n| extend appServicePlan = extract('serverfarms/([^/]+)', 1, tostring(properties.serverFarmId))\r\n| extend appServicePlanId = properties.serverFarmId\r\n| extend appServiceEnvironmentId = properties.hostingEnvironmentId\r\n| extend sku = tolower(properties.sku)\r\n| extend pricingTier = case(\r\nsku == 'free',\r\n'Free',\r\nsku == 'shared',\r\n'Shared',\r\nsku == 'dynamic',\r\n'Dynamic',\r\nsku == 'isolated',\r\n'Isolated',\r\nsku == 'premiumv2',\r\n'Premium V2',\r\nsku == 'premium',\r\n'Premium',\r\nsku == 'basic',\r\n'Basic',\r\nsku == 'elasticpremium',\r\n'Elastic Premium',\r\nsku == 'premiumv3',\r\n'Premium V3',\r\n'Standard')\r\n| extend state = tolower(properties.state)\r\n| extend status = case(\r\nstate == 'stopped',\r\n'Stopped',\r\nstate == 'running',\r\n'Running',\r\n'Other')\r\n| extend appType = case(\r\nkind contains 'botapp',\r\n'Bot Service',\r\nkind contains 'api',\r\n'Api App',\r\nkind contains 'functionapp' and kind !contains 'workflowapp',\r\n'Function App',\r\nkind contains 'functionapp' and kind contains 'workflowapp',\r\n'Logic App (Preview)',\r\n'Web App')\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project id, status, appType, appServicePlanId, pricingTier, location, subscriptionId, name, resourceGroup, kind, type, tags, appServiceEnvironmentId, Criticality, Environment\r\n| where (type !~ ('microsoft.elastic/monitors'))\r\n| where (type !~ ('providers.test/statefulibizaengines'))\r\n| where (type !~ ('microsoft.datacollaboration/workspaces'))\r\n| where (type !~ ('microsoft.securitydetonation/chambers'))\r\n| where (type !~ ('microsoft.azurestack/registrations'))\r\n| where (type !~ ('microsoft.intelligentitdigitaltwin/digitaltwins'))\r\n| where (type !~ ('microsoft.network/networkmanagers'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd2/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesbvtd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd/vaults'))\r\n| where (type !~ ('microsoft.recoveryservicesintd2/vaults'))\r\n| where (type !~ ('microsoft.hybridnetwork/devices'))\r\n| where (type !~ ('microsoft.hybridnetwork/vendors'))\r\n| where (type !~ ('microsoft.hybridnetwork/networkfunctions'))\r\n| where (type !~ ('microsoft.mobilenetwork/accesspoints'))\r\n| where (type !~ ('microsoft.mobilenetwork/enodebs'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobiledevices'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworks'))\r\n| where (type !~ ('microsoft.mobilenetwork/mobilenetworksites'))\r\n| where (type !~ ('microsoft.mobilenetwork/packetcores'))\r\n| where (type !~ ('microsoft.mobilenetwork/simprofiles'))\r\n| where (type !~ ('microsoft.connectedcache/cachenodes'))\r\n| where not((type =~ ('microsoft.sql/servers/databases')) and ((kind in~ ('system','v2.0,system','v12.0,system','v12.0,user,datawarehouse,gen2,analytics'))))\r\n| where not((type =~ ('microsoft.sql/servers')) and ((kind =~ ('v12.0,analytics'))))\r\n| project Name = name,Status = status,Tier = pricingTier,AppServicePlanId = appServicePlanId,AppType = appType,ResourceId = id,Type = type,Kind = kind,Location = location,SubscriptionId = subscriptionId,ResourceGroup = resourceGroup, Criticality, Environment\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project Name, Status, Location, ResourceGroup, Tier, AppType, Type, Kind, SubscriptionId, SubscriptionName, Criticality, Environment, AppServicePlanId, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})\r\n| where AppType == \"Web App\"",
              "size": 3,
              "title": "App Service - Web App",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Stopped",
                          "representation": "gray",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Tier",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Free",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Shared",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "AppType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Kind",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SubscriptionName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Criticality",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Mission Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Environment",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "Prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionName"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "Name"
                },
                "labelSettings": [
                  {
                    "columnId": "Name"
                  },
                  {
                    "columnId": "Status"
                  },
                  {
                    "columnId": "Location"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "Tier"
                  },
                  {
                    "columnId": "AppType",
                    "label": "App Type"
                  },
                  {
                    "columnId": "Type"
                  },
                  {
                    "columnId": "Kind"
                  },
                  {
                    "columnId": "SubscriptionId"
                  },
                  {
                    "columnId": "SubscriptionName",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "Criticality"
                  },
                  {
                    "columnId": "Environment"
                  },
                  {
                    "columnId": "AppServicePlanId",
                    "label": "App Service Plan Id"
                  },
                  {
                    "columnId": "ResourceId"
                  }
                ]
              }
            },
            "name": "query - 2"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Web"
      },
      "name": "Web"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "parameters": [
                {
                  "id": "e674bfa2-0e16-4ee3-9f6f-0d01d8347241",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "ae637451-d4ac-43e6-bcc7-9a0705878bc8",
                  "version": "KqlParameterItem/1.0",
                  "name": "Criticality",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| distinct Criticality",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "e3fbd475-e4a5-45f5-a4bf-ef8ec409d527",
                  "version": "KqlParameterItem/1.0",
                  "name": "Environment",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| distinct Environment",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "414cacfe-2d64-40eb-8788-16d82859ef94",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| distinct resourceGroup",
                  "crossComponentResources": [
                    "{Subscriptions}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ]
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "b3f445bb-65c7-45da-ae8a-dcfd2a90ee83",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "53b645ef-7b95-461b-a947-208de6da0f26",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "parameters - 0 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "[SLA for API Management](https://azure.microsoft.com/en-us/support/legal/sla/api-management/v1_4/)\r\n* We guarantee that API Management Service instances running in the Consumption Tier, Basic Tier, Standard Tier, and Premium Tier deployments scaled within a single region will respond to requests to perform operations at least 99.95% of the time.\r\n* We guarantee that API Management Service instances running in the Premium Tier with deployments scaled across two or more regions will respond to requests to perform operations at least 99.99% of the time.\r\n* No SLA is provided for the following:​\r\n * Developer tier of the API Management Service.\r\n * Any self-hosted API Management components.​\r\n \r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/api-management/)",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SLA",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 2 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "* Please note the Developer tier is for non-production use cases and evaluations. It does not offer an SLA.\r\n* API Management instances deleted using 2020-01-01-preview and later API versions will be soft-deleted and recoverable. APIM instances deleted using previous API versions will continue to be hard-deleted. Azure PowerShell and Azure CLI currently do not use the 2020-06-01-preview version and will also result in hard-delete behavior. Refer to [API Management soft-delete (preview)](https://docs.microsoft.com/en-us/azure/api-management/soft-delete) for more information.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "text - 3 - Copy - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n| where type == \"microsoft.apimanagement/service\"\r\n| extend Tier = tostring(sku.name)\r\n| extend Capacity = sku.capacity\r\n| extend Criticality = case(tags.Criticality <> \"\", tags.Criticality,\r\n\t\t    \"Undefined\")\r\n| extend Environment = case(\r\ntags.Environment <> \"\", tags.Environment,\r\ntags.environment <> \"\", tags.environment,\r\ntags.Env <> \"\", tags.Env,\r\ntags.env <> \"\", tags.env,\r\nname contains \"prod\", \"Production\",\r\nname contains \"dev\", \"Development\",\r\nname contains \"qa\", \"QA\",\r\nname contains \"uat\", \"UAT\",\r\nname contains \"sit\", \"SIT\",\r\nname contains \"test\", \"Test\",\r\n\"Undefined\")\r\n| project ResourceId = id, name, type, location, resourceGroup, SubscriptionId = subscriptionId, Criticality, Environment, Tier, Capacity\r\n//sub name\r\n| join kind = leftouter (resourcecontainers\r\n| where type == 'microsoft.resources/subscriptions'\r\n| extend subscriptionName = name\r\n| distinct subscriptionName, subscriptionId\r\n| project SubscriptionName = subscriptionName, SubscriptionId = subscriptionId) on SubscriptionId\r\n| project Name = name, Location = location, ResourceGroup = resourceGroup, Type = type, SubscriptionId, SubscriptionName, Tier, Capacity, Criticality, Environment, ResourceId\r\n| where Criticality in ({Criticality})\r\n| where Environment in ({Environment})\r\n| where ResourceGroup in ({ResourceGroup})",
              "size": 0,
              "title": "API Management",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Type",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SubscriptionName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Tier",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Premium",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Capacity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "1",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "1",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Criticality",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Mission Critical",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Environment",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Prod",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SubscriptionName"
                  ],
                  "expandTopLevel": false,
                  "finalBy": "Name"
                },
                "labelSettings": [
                  {
                    "columnId": "Name"
                  },
                  {
                    "columnId": "Location"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource Group"
                  },
                  {
                    "columnId": "Type"
                  },
                  {
                    "columnId": "SubscriptionId"
                  },
                  {
                    "columnId": "SubscriptionName",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "Tier"
                  },
                  {
                    "columnId": "Capacity"
                  },
                  {
                    "columnId": "Criticality"
                  },
                  {
                    "columnId": "ResourceId"
                  }
                ]
              }
            },
            "name": "query - 3"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Integration"
      },
      "name": "Integration"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "371c6c5b-70bb-48a8-9500-6abbc879ae04",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "description": "Lists all subscriptions.",
                  "isRequired": true,
                  "value": "/subscriptions/5733bcb3-7fde-4caf-8629-41dc15e3b352",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1"
                },
                {
                  "id": "f2436b2c-180c-4fbe-bd17-e8120e9ae9c4",
                  "version": "KqlParameterItem/1.0",
                  "name": "Vault",
                  "type": 2,
                  "isRequired": true,
                  "query": "resources \r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| project name",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": "CH-RV-Sec"
                },
                {
                  "id": "824f087f-59b2-49cb-93a2-ae89397f125f",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": true,
                  "query": "resources \r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n| where name == \"{Vault}\"\r\n| project resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "f46c904e-7777-498a-bcc3-f3340204ee71",
                  "version": "KqlParameterItem/1.0",
                  "name": "SLA",
                  "label": "Show SLA",
                  "type": 10,
                  "description": "This will show the SLA information for the focus area.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                },
                {
                  "id": "84fff300-b04a-4ef7-965c-8fcf0da7ac36",
                  "version": "KqlParameterItem/1.0",
                  "name": "Help",
                  "label": "Show Help",
                  "type": 10,
                  "description": "This will show additional information, and any prerequisites that may apply to the workbook.",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[{ \"value\": \"Yes\", \"label\": \"Yes\"},\r\n {\"value\": \"No\", \"label\": \"No\", \"selected\":true }]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Yes"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "[SLA for Azure Site Recovery](https://azure.microsoft.com/en-us/support/legal/sla/site-recovery/v1_2/)\r\n* For each Protected Instance configured for On-Premises-to-On-Premises Failover, we guarantee at least 99.9% availability of the Site Recovery service. Availability is calculated over a monthly billing cycle.\r\n* For each Protected Instance configured for On-Premises-to-Azure planned and unplanned Failover, we guarantee a two-hour Recovery Time Objective.\r\n* For each Protected Instance configured for Azure-to-Azure Failover, we guarantee a two-hour Recovery Time Objective.\r\n\r\n> SLA accurate at time of release. Latest information is available [here](https://azure.microsoft.com/en-us/support/legal/sla/site-recovery/)",
              "style": "upsell"
            },
            "conditionalVisibility": {
              "parameterName": "SLA",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Backup SLA"
          },
          {
            "type": 1,
            "content": {
              "json": "> Azure Site Recovery can help your business to keep doing business during major IT outages. Azure Site Recovery offers ease of deployment, cost effectiveness, and dependability. <br>Deploy replication, failover, and recovery processes through Site Recovery to help keep your applications running during planned and unplanned outages.\r\n\r\n* Where configured, Azure Site Recovery protected Virtual Machines will be listed in a table. \r\n* Ensure that each of the following parameters are selected from the drop down lists:\r\n\t* Subscription\r\n\t* Vault\r\n\t* Resource Group",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "Yes"
            },
            "name": "Backup Help"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[{\"key\":\"Name\",\"value\":\"$.friendlyName\"},{\"key\":\"Primary Fabric\",\"value\":\"$.primaryFabricFriendlyName\"},{\"key\":\"Recovery Fabric\",\"value\":\"$.recoveryFabricFriendlyName\"},{\"key\":\"Protection State\",\"value\":\"$.protectionState\"},{\"key\":\"Active Location\",\"value\":\"$.activeLocation\"},{\"key\":\"Replication Health\",\"value\":\"$.replicationHealth\"},{\"key\":\"Failover Health\",\"value\":\"$.failoverHealth\"},{\"key\":\"Policy Name\",\"value\":\"$.policyFriendlyName\"}],\"method\":\"GET\",\"path\":\"/Subscriptions/{Subscription:Id}/resourceGroups/{ResourceGroup}/providers/Microsoft.RecoveryServices/vaults/{Vault}/replicationProtectedItems\",\"urlParams\":[{\"key\":\"api-version\",\"value\":\"2018-07-10\"}],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value[*].properties\",\"columns\":[]}}]}",
              "size": 4,
              "title": "Azure Site Recovery",
              "queryType": 12,
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "protectedItemType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "protectableItemId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "recoveryServicesProviderId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "primaryFabricProvider",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "recoveryFabricId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "primaryProtectionContainerFriendlyName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "recoveryProtectionContainerFriendlyName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "protectionState",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Protected",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "protectionStateDescription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "testFailoverStateDescription",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "allowedOperations",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "replicationHealth",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Normal",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "failoverHealth",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "healthErrors",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policyId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "currentScenario",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "failoverRecoveryPointId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "providerSpecificDetails",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "recoveryContainerId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "eventCorrelationId",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "friendlyName",
                    "label": "Virtual Machine"
                  },
                  {
                    "columnId": "protectedItemType"
                  },
                  {
                    "columnId": "protectableItemId"
                  },
                  {
                    "columnId": "recoveryServicesProviderId"
                  },
                  {
                    "columnId": "primaryFabricFriendlyName",
                    "label": "Primary Fabric"
                  },
                  {
                    "columnId": "primaryFabricProvider"
                  },
                  {
                    "columnId": "recoveryFabricFriendlyName",
                    "label": "Recovery Fabric"
                  },
                  {
                    "columnId": "recoveryFabricId"
                  },
                  {
                    "columnId": "primaryProtectionContainerFriendlyName"
                  },
                  {
                    "columnId": "recoveryProtectionContainerFriendlyName"
                  },
                  {
                    "columnId": "protectionState",
                    "label": "Protection State"
                  },
                  {
                    "columnId": "protectionStateDescription"
                  },
                  {
                    "columnId": "activeLocation",
                    "label": "Active Location"
                  },
                  {
                    "columnId": "testFailoverState",
                    "label": "Test Failover State"
                  },
                  {
                    "columnId": "testFailoverStateDescription"
                  },
                  {
                    "columnId": "allowedOperations"
                  },
                  {
                    "columnId": "replicationHealth",
                    "label": "Replication Health"
                  },
                  {
                    "columnId": "failoverHealth",
                    "label": "Failover Health"
                  },
                  {
                    "columnId": "healthErrors"
                  },
                  {
                    "columnId": "policyId"
                  },
                  {
                    "columnId": "policyFriendlyName",
                    "label": "Policy Name"
                  },
                  {
                    "columnId": "currentScenario"
                  },
                  {
                    "columnId": "failoverRecoveryPointId"
                  },
                  {
                    "columnId": "providerSpecificDetails"
                  },
                  {
                    "columnId": "recoveryContainerId"
                  },
                  {
                    "columnId": "eventCorrelationId"
                  }
                ]
              }
            },
            "name": "query - 3"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Backup"
      },
      "name": "Backup"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}